<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CYBD.Common</name>
    </assembly>
    <members>
        <member name="T:CYBD.Authority.AdminPermissionManager">
            <summary>
            后台权限系统 - 管理权限管理器
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    后台权限系统 - 管理权限管理器
                             
             History:        2015/4/8 19:58:17 创建
                             
            </remarks>
        </member>
        <member name="M:CYBD.Authority.AdminPermissionManager.ReloadAdminPermissions">
            <summary>
            加载管理权限
            </summary>
        </member>
        <member name="P:CYBD.Authority.AdminPermissionManager.AdminControllerPermissions">
            <summary>
            管理权限
            </summary>
        </member>
        <member name="P:CYBD.Authority.AdminPermissionManager.AdminActionPermissions">
            <summary>
            管理权限
            </summary>
        </member>
        <member name="T:CYBD.Authority.AuthorityConfig">
            <summary>
            后台权限系统 - 配置项
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    后台权限系统 - 配置项
                             
             History:        2015/4/8 21:46:12 创建
                             
            </remarks>
        </member>
        <member name="F:CYBD.Authority.AuthorityConfig.FIRST_MASTER_ID">
            <summary>
            初始的超级管理员账号ID
            </summary>
        </member>
        <member name="F:CYBD.Authority.AuthorityConfig.AssignableControllerType">
            <summary>
            指定控制器继承类型，符合此类型的才会加入到权限系统分析中
            </summary>
        </member>
        <member name="F:CYBD.Authority.AuthorityConfig.AssignableActionType">
            <summary>
            指定视图继承类型，符合此类型的才会加入到权限系统分析中
            </summary>
        </member>
        <member name="F:CYBD.Authority.AuthorityConfig.LoginAdminCookieKey">
            <summary>
            后台登陆用户COOKIE键名
            </summary>
        </member>
        <member name="F:CYBD.Authority.AuthorityConfig.LoginAdminCookieSeparator">
            <summary>
            后台登陆用户COOKIE信息分隔符
            </summary>
        </member>
        <member name="F:CYBD.Authority.AuthorityConfig.LoginAdminCookieDESKey">
            <summary>
            后台登陆用户COOKIE加密DES KEY
            </summary>
        </member>
        <member name="F:CYBD.Authority.AuthorityConfig.LoginAdminCookieDESIV">
            <summary>
            后台登陆用户COOKIE加密DES IV
            </summary>
        </member>
        <member name="F:CYBD.Authority.AuthorityAccessResult.NoLogin">
            <summary>
            没登陆
            </summary>
        </member>
        <member name="F:CYBD.Authority.AuthorityAccessResult.NoPermission">
            <summary>
            没权限
            </summary>
        </member>
        <member name="F:CYBD.Authority.AuthorityAccessResult.Disabled">
            <summary>
            禁用
            </summary>
        </member>
        <member name="F:CYBD.Authority.AuthorityAccessResult.OK">
            <summary>
            正常
            </summary>
        </member>
        <member name="T:CYBD.Authority.AuthorityContext">
            <summary>
            后台权限系统
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    后台权限系统
                             损耗一定性能，仅用于后台
                             
             History:        2015/4/8 22:34:50 创建
                             
            </remarks>
        </member>
        <member name="T:CYBD.Model.BoBase`1">
            <summary>
            Business Object 基类
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    页面基类
                             
             History:        2010/07/25 16:25:20 创建
            </remarks>
        </member>
        <member name="M:CYBD.Model.BoBase`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:CYBD.Model.BoBase`1.New">
            <summary>
            
            </summary>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.RemoveAdminCache(System.Int32)">
            <summary>
            移除单条管理员数据缓存
            </summary>
            <param name="adminId"></param>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.RemoveAdminGroupCache(System.Int32)">
            <summary>
            移除单条管理员组数据缓存
            </summary>
            <param name="adminGroupId"></param>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.RemoveAdminGroupPermissionsCache(System.Int32)">
            <summary>
            移除指定管理员组的权限数据缓存
            </summary>
            <param name="adminGroupId"></param>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.RemoveAllAdminCache">
            <summary>
            移除所有管理员缓存
            </summary>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.IsCanAccess(System.String)">
            <summary>
            当前登陆的管理员是否有权限登陆进指定的控制器
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.IsCanAccess(System.String,System.String)">
            <summary>
            当前登陆的管理员是否有权限登陆进指定的视图
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.AddAdmin(CYBD.Authority.Admin,System.Int32@)">
            <summary>
            添加管理员
            </summary>
            <param name="admin"></param>
            <param name="result">注册结果 - 0:失败,-1:用户名已经存在</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.LoginAdmin(System.String,System.String,System.String,System.Int32@)">
            <summary>
            管理员登陆
            </summary>
            <param name="account"></param>
            <param name="password"></param>
            <param name="ip"></param>
            <param name="loginResult"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.LogoutAdmin">
            <summary>
            管理员注销
            </summary>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.UpdateAdmin(CYBD.Authority.Admin)">
            <summary>
            更新管理员
            </summary>
            <param name="admin"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.SaveAccount(CYBD.Authority.Admin)">
            <summary>
            管理员修改自己的账号信息
            </summary>
            <param name="admin"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.AddAdminGroup(CYBD.Authority.AdminGroup,System.Collections.Generic.List{CYBD.Authority.AdminGroupPermission})">
            <summary>
            添加管理员组
            </summary>
            <param name="adminGroup"></param>
            <param name="permissionList"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.UpdateAdminGroup(CYBD.Authority.AdminGroup,System.Collections.Generic.List{CYBD.Authority.AdminGroupPermission})">
            <summary>
            更新管理员组
            </summary>
            <param name="adminGroup"></param>
            <param name="permissionList"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.SetAdminIsDisabled(System.Int32,System.Boolean)">
            <summary>
            设置管理员禁用或启用
            </summary>
            <param name="adminId"></param>
            <param name="disabled"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.DeleteAdmin(System.Int32)">
            <summary>
            彻底删除管理员
            </summary>
            <param name="adminId"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.DeleteAdminGroup(System.Int32)">
            <summary>
            彻底删除管理员组
            </summary>
            <param name="adminGroupId"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.AddLoginRecord(CYBD.Authority.AdminLoginRecord)">
            <summary>
            
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.GetCurrentAdmin">
            <summary>
            获取当前登陆的管理员
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.GetCurrentAdmin(System.String)">
            <summary>
            获取当前登陆的管理员
            </summary>
            <param name="authStr"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.GetAdminGroupList">
            <summary>
            获取所有管理员组列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.GetAdminGroup(System.Int32)">
            <summary>
            获取管理员组
            </summary>
            <param name="adminGroupId"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.GetAdminList">
            <summary>
            获取所有管理员列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.GetAdminList(CYBD.Model.PagerInfo)">
            <summary>
            获取所有管理员列表，分页
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.GetAdminList(System.Boolean)">
            <summary>
            获取所有管理员列表，指定取是否禁用的数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.GetAdminList(System.Boolean,CYBD.Model.PagerInfo)">
            <summary>
            获取所有管理员列表，分页，指定取是否禁用的数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.GetAdminLoginRecordList(CYBD.Model.PagerInfo)">
            <summary>
            获取所有管理员登录记录
            </summary>
            <param name="pagerInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.SearchAdminLoginRecordList(System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},CYBD.Model.PagerInfo)">
            <summary>
            搜索管理员登录记录
            </summary>
            <param name="adminId"></param>
            <param name="loginIp"></param>
            <param name="startTime"></param>
            <param name="endTime"></param>
            <param name="pagerInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.GetAdminDictionary(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            获取指定ID集的管理员字典
            </summary>
            <returns>key:AdminId, Value:Admin</returns>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.GetGroupAdminList(System.Int32)">
            <summary>
            获取指定组的管理员列表
            </summary>
            <param name="adminGroupId"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.GetAdmin(System.Int32)">
            <summary>
            获取指定的管理员及其所属的组
            </summary>
            <param name="adminId"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.AuthorityContext.GetAdminGroupPermissionList(System.Int32)">
            <summary>
            获取管理员组的所有权限列表
            </summary>
            <param name="adminGroupId"></param>
            <returns></returns>
        </member>
        <member name="T:CYBD.Authority.AuthorityProviderFactory">
            <summary>
            后台权限系统数据提供器工厂
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    后台权限系统数据提供器工厂
                             
             History:        2015/4/8 22:29:31 创建
                             
            </remarks>
        </member>
        <member name="P:CYBD.Authority.AuthorityProviderFactory.AuthorityProvider">
            <summary>
            后台权限系统数据提供器
            </summary>
        </member>
        <member name="T:CYBD.Authority.AuthoritySqlProvider">
            <summary>
            框架内置后台权限系统数据SQL提供器
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    框架内置后台权限系统数据SQL提供器
                             
             History:        2015/4/8 22:58:40 创建
                             
            </remarks>
        </member>
        <member name="T:CYBD.Authority.IAuthorityProvider">
            <summary>
            后台权限系统数据提供器接口
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    后台权限系统数据提供器接口
                             
             History:        2015/4/8 19:50:58 创建
                             
            </remarks>
        </member>
        <member name="M:CYBD.Authority.IAuthorityProvider.AddAdmin(CYBD.Authority.Admin)">
            <summary>
            添加管理员
            </summary>
            <param name="admin"></param>
            <returns>注册结果 - 0:失败,-1:用户名已经存在</returns>
        </member>
        <member name="M:CYBD.Authority.IAuthorityProvider.LoginAdmin(System.String,System.String,System.String)">
            <summary>
            管理员登陆
            </summary>
            <param name="account"></param>
            <param name="password"></param>
            <param name="ip"></param>
            <returns>登录结果 - 0:失败,-1:用户名或密码错误,-2:用户不存在,>0:用户ID</returns>
        </member>
        <member name="M:CYBD.Authority.IAuthorityProvider.UpdateAdmin(CYBD.Authority.Admin)">
            <summary>
            更新管理员及其所属组
            </summary>
            <param name="admin"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.IAuthorityProvider.SaveAccount(CYBD.Authority.Admin)">
            <summary>
            管理员修改自己的账号
            </summary>
            <param name="admin"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.IAuthorityProvider.AddAdminGroup(CYBD.Authority.AdminGroup,System.Collections.Generic.List{CYBD.Authority.AdminGroupPermission})">
            <summary>
            添加管理员组及其权限
            </summary>
            <param name="adminGroup"></param>
            <param name="permissionList"></param>
            <returns>管理员组ID</returns>
        </member>
        <member name="M:CYBD.Authority.IAuthorityProvider.UpdateAdminGroup(CYBD.Authority.AdminGroup,System.Collections.Generic.List{CYBD.Authority.AdminGroupPermission})">
            <summary>
            更新管理员组及其权限
            </summary>
            <param name="adminGroup"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.IAuthorityProvider.SetAdminIsDisabled(System.Int32,System.Boolean)">
            <summary>
            设置是否禁用管理员
            </summary>
            <param name="adminId"></param>
            <param name="disabled"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.IAuthorityProvider.DeleteAdmin(System.Int32)">
            <summary>
            删除管理员
            </summary>
            <param name="adminId"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.IAuthorityProvider.DeleteAdminGroup(System.Int32)">
            <summary>
            删除管理员组
            </summary>
            <param name="adminGroupId"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.IAuthorityProvider.AddLoginRecord(CYBD.Authority.AdminLoginRecord)">
            <summary>
            添加登录记录
            </summary>
            <param name="record"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.IAuthorityProvider.GetAdminGroupList">
            <summary>
            获取所有管理员组
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.IAuthorityProvider.GetAdminGroup(System.Int32)">
            <summary>
            获取指定管理员组
            </summary>
            <param name="adminGroupId"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.IAuthorityProvider.GetAdminList">
            <summary>
            获取所有管理员
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.IAuthorityProvider.GetAdminList(CYBD.Model.PagerInfo)">
            <summary>
            获取所有管理员，分页
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.IAuthorityProvider.GetAdminList(System.Boolean)">
            <summary>
            获取所有管理员，指定取是否禁用的数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.IAuthorityProvider.GetAdminList(System.Boolean,CYBD.Model.PagerInfo)">
            <summary>
            获取所有管理员，分页，指定取是否禁用的数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.IAuthorityProvider.GetAdminLoginRecordList(CYBD.Model.PagerInfo)">
            <summary>
            获取所有管理员登录记录
            </summary>
            <param name="pagerInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.IAuthorityProvider.SearchAdminLoginRecordList(System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},CYBD.Model.PagerInfo)">
            <summary>
            搜索管理员登录记录
            </summary>
            <param name="pagerInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.IAuthorityProvider.GetGroupAdminList(System.Int32)">
            <summary>
            获取指定组的管理员
            </summary>
            <param name="adminGroupId"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.IAuthorityProvider.GetAdmin(System.Int32)">
            <summary>
            获取指定管理员
            </summary>
            <param name="adminId"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Authority.IAuthorityProvider.GetAdminDictionary(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            获取指定ID集的管理员字典
            </summary>
            <returns>key:AdminId, Value:Admin</returns>
        </member>
        <member name="M:CYBD.Authority.IAuthorityProvider.GetAdminGroupPermissionList(System.Int32)">
            <summary>
            获取指定管理员组权限列表
            </summary>
            <param name="adminGroupId"></param>
            <returns></returns>
        </member>
        <member name="T:CYBD.Authority.AuthoritySqlQuery">
            <summary>
            
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    
                             
             History:        2015/4/8 22:58:40 创建
            </remarks>
        </member>
        <member name="T:CYBD.DataAccess.SqlQuery">
            <summary>
            SqlServer数据访问对象
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    SqlServer数据访问对象
                             
             History:        2010/10/12 11:18:20 创建
            </remarks>
        </member>
        <member name="F:CYBD.DataAccess.SqlQuery._ownSession">
            <summary>
            是否在本实例中实例化的SqlSession
            </summary>
        </member>
        <member name="F:CYBD.DataAccess.SqlQuery._prepared">
            <summary>
            是否准备了命令版本
            </summary>
        </member>
        <member name="M:CYBD.DataAccess.SqlQuery.#ctor">
            <summary>
            实例化数据库访问对象，默认使用配置文件中的连接字符串
            </summary>
        </member>
        <member name="M:CYBD.DataAccess.SqlQuery.#ctor(System.String)">
            <summary>
            自定义此次访问数据库的连接字符串
            </summary>
            <param name="connString"></param>
        </member>
        <member name="M:CYBD.DataAccess.SqlQuery.CreateCommand(System.String)">
            <summary>
            创建查询命令对象
            </summary>
        </member>
        <member name="M:CYBD.DataAccess.SqlQuery.CreateParameter``1(System.String,``0,System.Data.SqlDbType)">
            <summary>
            创建查询参数
            </summary>
        </member>
        <member name="M:CYBD.DataAccess.SqlQuery.CreateParameter``1(System.String,``0,System.Data.SqlDbType,System.Int32)">
            <summary>
            创建查询参数
            </summary>
        </member>
        <member name="M:CYBD.DataAccess.SqlQuery.CreateParameter``1(System.String,System.Data.SqlDbType,System.Data.ParameterDirection)">
            <summary>
            创建查询参数
            </summary>
        </member>
        <member name="M:CYBD.DataAccess.SqlQuery.CreateParameter``1(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection)">
            <summary>
            创建查询参数
            </summary>
        </member>
        <member name="M:CYBD.DataAccess.SqlQuery.CreateParameter``1(System.String,``0,System.Nullable{System.Data.SqlDbType},System.Nullable{System.Int32},System.Nullable{System.Data.ParameterDirection})">
            <summary>
            创建查询参数
            </summary>
        </member>
        <member name="M:CYBD.DataAccess.SqlQuery.ExecuteScalar(System.String)">
            <summary>
            查询返回第一行第一列
            </summary>
        </member>
        <member name="M:CYBD.DataAccess.SqlQuery.ExecuteScalar``1(System.String)">
            <summary>
            查询返回第一行第一列
            </summary>
        </member>
        <member name="M:CYBD.DataAccess.SqlQuery.ExecuteScalar``1(System.String,``0)">
            <summary>
            查询返回第一行第一列
            </summary>
        </member>
        <member name="M:CYBD.DataAccess.SqlQuery.ExecuteReader(System.String)">
            <summary>
            查询返回数据包装集
            </summary>
        </member>
        <member name="M:CYBD.DataAccess.SqlQuery.ExecuteNonQuery(System.String)">
            <summary>
            查询返回影响数据行数
            </summary>
        </member>
        <member name="M:CYBD.DataAccess.SqlQuery.ExecuteDataSet(System.String)">
            <summary>
            查询返回DataSet
            </summary>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.DataAccess.SqlQuery.BulkCopy(System.Data.DataTable,System.String,System.String[])">
            <summary>
            快速批量拷贝数据源至目标数据表
            </summary>
            <param name="sourceDataTable">数据源</param>
            <param name="destTableName">目标数据表名</param>
            <param name="columns">列</param>
        </member>
        <member name="M:CYBD.DataAccess.SqlQuery.BulkCopy(System.Data.DataTable,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String[])">
            <summary>
            快速批量拷贝数据源至目标数据表
            </summary>
            <param name="sourceDataTable">数据源</param>
            <param name="destTableName">目标数据表名</param>
            <param name="batchSize">每一批次中的行数</param>
            <param name="timeout">超时时间</param>
            <param name="columns">列</param>
        </member>
        <member name="M:CYBD.DataAccess.SqlQuery.QueryForEntity``1(System.String)">
            <summary>
            查询返回一个实体对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.DataAccess.SqlQuery.QueryForEntity``1(System.String,System.String)">
            <summary>
            查询返回一个实体对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="commandText"></param>
            <param name="fields">要查询哪些字段，英文逗号分隔</param>
        </member>
        <member name="M:CYBD.DataAccess.SqlQuery.QueryForEntityList``1(System.String)">
            <summary>
            查询返回实体对象列表
            </summary>
            <typeparam name="T"></typeparam>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.DataAccess.SqlQuery.QueryForEntityList``1(System.String,System.String)">
            <summary>
            查询返回实体对象列表
            </summary>
            <typeparam name="T"></typeparam>
            <param name="commandText"></param>
            <param name="fields">要查询哪些字段，英文逗号分隔</param>
        </member>
        <member name="M:CYBD.DataAccess.SqlQuery.QueryForEntityDictionary``2(System.String,System.String)">
            <summary>
            查询返回实体对象字典
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="commandText"></param>
            <param name="keyField"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.DataAccess.SqlQuery.QueryForEntityDictionary``2(System.String,System.String,System.String)">
            <summary>
            查询返回实体对象字典
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="commandText"></param>
            <param name="fields">要查询哪些字段，英文逗号分隔</param>
            <param name="keyField">字典键值对应的数据表的字段名</param>
        </member>
        <member name="M:CYBD.DataAccess.SqlQuery.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:CYBD.DataAccess.SqlQuery.RecordQueryTimes">
            <summary>
            是否统计当前页面请求查询次数
            如果设置为是，则HttpContext.Current必须不能为null
            </summary>
        </member>
        <member name="P:CYBD.DataAccess.SqlQuery.Session">
            <summary>
            数据访问会话对象
            </summary>
        </member>
        <member name="P:CYBD.DataAccess.SqlQuery.ConnectionString">
            <summary>
            数据库连接字符串
            </summary>
        </member>
        <member name="P:CYBD.DataAccess.SqlQuery.Command">
            <summary>
            数据查询命令对象
            </summary>
        </member>
        <member name="P:CYBD.DataAccess.SqlQuery.CommandType">
            <summary>
            查询命令字符串解释类型
            </summary>
        </member>
        <member name="P:CYBD.DataAccess.SqlQuery.CommandTimeout">
            <summary>
            命令执行超时时间(秒)
            </summary>
        </member>
        <member name="P:CYBD.DataAccess.SqlQuery.IsPrepare">
            <summary>
            是否创建命令的准备版本
            </summary>
        </member>
        <member name="P:CYBD.DataAccess.SqlQuery.QueryPager">
            <summary>
            分页数据查询访问对象
            </summary>
        </member>
        <member name="P:CYBD.DataAccess.SqlQuery.DefaultConnectionString">
            <summary>
            默认的连接字符串
            示例： 
             Windows身份验证 - Data Source=localhost;Integrated Security=True;
                               Data Source=localhost;Integrated Security=SSPI;Initial Catalog=Northwind
             SQL Server身份验证 - Data Source=192.168.1.100,1433;User ID=sa;Password=123456;
                                  Data Source=192.168.1.100,1433;Initial Catalog=Northwind;User ID=sa;Password=123456;
                                  Server=192.168.1.100,1433;DataBase=Northwind;User ID=sa;Password=123456;Connect Timeout=6;
            连接串键值对示例说明：
             Data Source(数据源)/Server(服务器)/Address(地址)/Addr(地址)/Network Address(网络地址):SQL Server实例的名称或网络地址。例：localhost,192.168.1.100,1433,127.0.0.1。
             Database(数据库)/Initial Catalog(初始编目):数据库的名称。例：Northwind。
             User ID(用户ID):用来登陆数据库的帐户名。例：sa。
             Password(密码)/Pwd：与帐户名相对应的密码。例：123456。
             Integrated Security(集成安全)/Trusted Connection(受信连接):表示Windows认证是否被用来连接数据库。它可以被设置成真、伪或者是和真对等的sspi，其缺省值为伪。
             Connect Timeout(连接超时)/Connection Timeout(连接超时):一个到服务器的连接在终止之前等待的时间长度(以秒计)，缺省值为15。
             Connection Lifetime(连接生存时间):当一个连接被返回到连接池时，它的创建时间会与当前时间进行对比。如果这个时间跨度超过了连接的有效期的话，连接就被取消。其缺省值为0。
             Connection Reset(连接重置):表示一个连接在从连接池中被移除时是否被重置。一个伪的有效在获得一个连接的时候就无需再进行一个额外的服务器来回运作，其缺省值为真。
             Max Pool Size(连接池的最大容量):连接池允许的连接数的最大值，其缺省值为100。
             Min Pool Size(连接池的最小容量):连接池允许的连接数的最小值，其缺省值为0。
             Packet Size(数据包大小):用来和数据库通信的网络数据包的大小。其缺省值为8192。
             Pooling(池):确定是否使用连接池。如果值为真的话，连接就要从适当的连接池中获得，或者，如果需要的话，连接将被创建，然后被加入合适的连接池中。其缺省值为真。
             Encrypt(加密):当值为真时，如果服务器安装了授权证书，SQL Server就会对所有在客户和服务器之间传输的数据使用SSL加密。被接受的值有true（真）、false（伪）、yes（是）和no（否）。
             Network Library(网络库)/Net(网络):用来建立到一个SQL Server实例的连接的网络库。支持的值包括： dbnmpntw(Named Pipes)、dbmsrpcn(Multiprotocol/RPC)、dbmsvinn(Banyan Vines)、dbmsspxn(IPX/SPX)和dbmssocn(TCP/IP)。协议的动态链接库必须被安装到适当的连接，其缺省值为TCP/IP。
             Current Language(当前语言):SQL Server语言记录的名称。
             Application Name(应用程序名称):应用程序的名称。如果没有被指定的话，它的值为.NET SqlClient Data Provider(数据提供程序)。
             AttachDBFilename/extended properties(扩展属性)/Initial File Name(初始文件名):可连接数据库的主要文件的名称，包括完整路径名称。数据库名称必须用关键字数据库指定。
             Workstation ID(工作站ID):连接到SQL Server的工作站的名称。其缺省值为本地计算机的名称。
            </summary>
        </member>
        <member name="T:CYBD.Authority.AuthoritySqlSession">
            <summary>
            
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    
                             
             History:        2015/4/8 22:58:40 创建
                             
            </remarks>
        </member>
        <member name="T:CYBD.DataAccess.SqlSession">
            <summary>
            SqlServer数据库会话
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    SqlServer数据库会话
                             
             History:        2010/10/12 9:58:40 创建
            </remarks>
        </member>
        <member name="M:CYBD.DataAccess.SqlSession.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CYBD.DataAccess.SqlSession.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="connString"></param>
        </member>
        <member name="M:CYBD.DataAccess.SqlSession.CreateQuery">
            <summary>
            创建SQL SERVER数据请求对象
            </summary>
        </member>
        <member name="M:CYBD.DataAccess.SqlSession.BeginTransaction">
            <summary>
            开始一个新的事务。如果原来的事务没有提交，将自动提交原来的事务
            </summary>
        </member>
        <member name="M:CYBD.DataAccess.SqlSession.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            开始一个新的事务。如果原来的事务没有提交，将自动提交原来的事务
            </summary>
            <param name="isolationLevel"></param>
        </member>
        <member name="M:CYBD.DataAccess.SqlSession.CommitTransaction">
            <summary>
            提交事务
            </summary>
        </member>
        <member name="M:CYBD.DataAccess.SqlSession.RollbackTransaction">
            <summary>
            回滚事务
            </summary>
        </member>
        <member name="M:CYBD.DataAccess.SqlSession.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:CYBD.DataAccess.SqlSession.ConnectionString">
            <summary>
            数据库连接字符串
            </summary>
        </member>
        <member name="P:CYBD.DataAccess.SqlSession.Connection">
            <summary>
            数据库连接对象
            </summary>
        </member>
        <member name="P:CYBD.DataAccess.SqlSession.Transaction">
            <summary>
            要处理的事务
            </summary>
        </member>
        <member name="M:CYBD.Authority.AuthoritySqlSession.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:CYBD.Authority.AuthoritySqlConfig">
            <summary>
            
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    
                             
             History:        2015/4/8 22:58:40 创建
                             
            </remarks>
        </member>
        <member name="T:CYBD.Authority.Admin">
            <summary>
            后台权限系统 - 管理员
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    后台权限系统 - 管理员
                             
             History:        2015/4/8 17:35:45 创建
                             
            </remarks>
        </member>
        <member name="T:CYBD.Model.EntityBase`1">
            <summary>
            实体基类
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    实体基类
                             
             History:        2010/10/12 9:38:20 创建
            </remarks>
        </member>
        <member name="T:CYBD.Model.IEntitySet">
            <summary>
            实体类加载数据接口
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    实体类加载数据接口
                             
             History:        2010/10/12 12:18:10 创建
            </remarks>
        </member>
        <member name="M:CYBD.Model.IEntitySet.SetProperty(CYBD.Model.DataReaderWrap)">
            <summary>
            使用数据集设置实体属性值
            </summary>
        </member>
        <member name="M:CYBD.Model.IEntitySet.SetProperty(CYBD.Model.DataReaderWrap,System.String)">
            <summary>
            使用数据集设置实体属性值
            </summary>
            <param name="fields">要查询哪些字段，英文逗号分隔</param>
        </member>
        <member name="M:CYBD.Model.IEntitySet.ToJSON">
            <summary>
            序列化成JSON数据
            </summary>
        </member>
        <member name="M:CYBD.Model.EntityBase`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CYBD.Model.EntityBase`1.#ctor(CYBD.Model.DataReaderWrap)">
            <summary>
            
            </summary>
            <param name="xReader"></param>
        </member>
        <member name="M:CYBD.Model.EntityBase`1.#ctor(CYBD.Model.DataReaderWrap,System.String)">
            <summary>
            
            </summary>
            <param name="xReader"></param>
            <param name="fields">要查询哪些字段，英文逗号分隔</param>
        </member>
        <member name="M:CYBD.Model.EntityBase`1.SetProperty(CYBD.Model.DataReaderWrap)">
            <summary>
            
            </summary>
            <param name="xReader"></param>
        </member>
        <member name="M:CYBD.Model.EntityBase`1.SetProperty(CYBD.Model.DataReaderWrap,System.String)">
            <summary>
            
            </summary>
            <param name="xReader"></param>
            <param name="fields">要查询哪些字段，英文逗号分隔</param>
        </member>
        <member name="M:CYBD.Model.EntityBase`1.ToJSON">
            <summary>
            转化为JSON数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.EntityBase`1.LoadFromPostForm">
            <summary>
            从提交的表单加载值
            </summary>
        </member>
        <member name="M:CYBD.Model.EntityBase`1.LoadFromPostForm(System.Web.HttpRequest)">
            <summary>
            从提交的表单加载值
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:CYBD.Model.EntityBase`1.LoadFromPostForm(System.String)">
            <summary>
            从提交的表单加载值
            </summary>
        </member>
        <member name="M:CYBD.Model.EntityBase`1.LoadFromPostForm(System.Web.HttpRequest,System.String)">
            <summary>
            从提交的表单加载值
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:CYBD.Model.EntityBase`1.LoadFromPostForm(System.Web.HttpRequest,System.Type,System.String)">
            <summary>
            从提交的表单加载值
            </summary>
            <param name="request"></param>
            <param name="type"></param>
            <param name="suffix">表单名后缀</param>
        </member>
        <member name="P:CYBD.Model.EntityBase`1.Originality">
            <summary>
            原来的实例
            </summary>
        </member>
        <member name="P:CYBD.Authority.Admin.AdminId">
            <summary>
            管理员ID
            </summary>
        </member>
        <member name="P:CYBD.Authority.Admin.Account">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:CYBD.Authority.Admin.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:CYBD.Authority.Admin.RealName">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:CYBD.Authority.Admin.Email">
            <summary>
            邮箱地址
            </summary>
        </member>
        <member name="P:CYBD.Authority.Admin.Mobile">
            <summary>
            手机
            </summary>
        </member>
        <member name="P:CYBD.Authority.Admin.IsMaster">
            <summary>
            是否超级管理员(拥有所有权限)
            </summary>
        </member>
        <member name="P:CYBD.Authority.Admin.IsDisabled">
            <summary>
            是否禁用
            </summary>
        </member>
        <member name="P:CYBD.Authority.Admin.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:CYBD.Authority.Admin.LoginIp">
            <summary>
            最后登陆IP
            </summary>
        </member>
        <member name="P:CYBD.Authority.Admin.LoginTime">
            <summary>
            最后登陆时间
            </summary>
        </member>
        <member name="P:CYBD.Authority.Admin.GroupIdList">
            <summary>
            所属的管理员组ID列表
            </summary>
        </member>
        <member name="T:CYBD.Authority.AdminActionPermission">
            <summary>
            后台权限系统 - 后台管理权限
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    后台权限系统 - 后台管理权限
                             
             History:        2015/4/8 21:34:15 创建
                             
            </remarks>
        </member>
        <member name="M:CYBD.Authority.AdminActionPermission.GetUrl">
            <summary>
            获取权限页面路径
            </summary>
            <returns></returns>
        </member>
        <member name="P:CYBD.Authority.AdminActionPermission.Name">
            <summary>
            视图名称
            </summary>
        </member>
        <member name="P:CYBD.Authority.AdminActionPermission.ControllerName">
            <summary>
            所属控制器名称
            </summary>
        </member>
        <member name="P:CYBD.Authority.AdminActionPermission.Caption">
            <summary>
            权限名称
            </summary>
        </member>
        <member name="P:CYBD.Authority.AdminActionPermission.Url">
            <summary>
            自定义路径
            </summary>
        </member>
        <member name="P:CYBD.Authority.AdminActionPermission.Priority">
            <summary>
            展示优先级，值越大越靠前
            </summary>
        </member>
        <member name="P:CYBD.Authority.AdminActionPermission.OnlyLogin">
            <summary>
            只需要登陆就可访问
            </summary>
        </member>
        <member name="P:CYBD.Authority.AdminActionPermission.ShowMenu">
            <summary>
            是否显示菜单
            </summary>
        </member>
        <member name="T:CYBD.Authority.AdminActionPermissionAttribute">
            <summary>
            后台权限系统 - 视图标记为加入权限系统
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    后台权限系统 - 视图标记为加入权限系统
                             
             History:        2015/4/8 17:59:24 创建
                             
            </remarks>
        </member>
        <member name="P:CYBD.Authority.AdminActionPermissionAttribute.IsExcluding">
            <summary>
            是否排除出权限系统
            </summary>
        </member>
        <member name="P:CYBD.Authority.AdminActionPermissionAttribute.Caption">
            <summary>
            视图权限名称
            </summary>
        </member>
        <member name="P:CYBD.Authority.AdminActionPermissionAttribute.Url">
            <summary>
            自定义权限路径
            </summary>
        </member>
        <member name="P:CYBD.Authority.AdminActionPermissionAttribute.OnlyLogin">
            <summary>
            是否只需要登陆
            </summary>
        </member>
        <member name="P:CYBD.Authority.AdminActionPermissionAttribute.ShowMenu">
            <summary>
            显示菜单
            </summary>
        </member>
        <member name="P:CYBD.Authority.AdminActionPermissionAttribute.Priority">
            <summary>
            展示优先级，值越大越靠前
            </summary>
        </member>
        <member name="T:CYBD.Authority.AdminControllerPermissionAttribute">
            <summary>
            后台权限系统 - 控制器标记为加入权限系统
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    后台权限系统 - 控制器标记为加入权限系统
                             
             History:        2015/4/8 17:56:19 创建
                             
            </remarks>
        </member>
        <member name="P:CYBD.Authority.AdminControllerPermissionAttribute.UseAllActions">
            <summary>
            是否将该控制器下所有视图加入权限系统
            注:标记AdminActionPermissionAttribute.IsExcluding = false的视图会被排除
            </summary>
        </member>
        <member name="P:CYBD.Authority.AdminControllerPermissionAttribute.Caption">
            <summary>
            控制器权限名称
            </summary>
        </member>
        <member name="P:CYBD.Authority.AdminControllerPermissionAttribute.Priority">
            <summary>
            展示优先级，值越大越靠前
            </summary>
        </member>
        <member name="T:CYBD.Authority.AdminGroup">
            <summary>
            后台权限系统 - 管理员组
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    后台权限系统 - 管理员组
                             
             History:        2015/4/8 17:30:56 创建
                             
            </remarks>
        </member>
        <member name="M:CYBD.Authority.AdminGroup.IsAuth(System.String,System.String,System.Collections.Generic.List{CYBD.Authority.AdminGroupPermission})">
            <summary>
            
            </summary>
            <param name="controllerName"></param>
            <param name="actionName"></param>
            <param name="permissionList"></param>
            <returns></returns>
        </member>
        <member name="P:CYBD.Authority.AdminGroup.AdminGroupId">
            <summary>
            管理员组ID
            </summary>
        </member>
        <member name="P:CYBD.Authority.AdminGroup.Name">
            <summary>
            组名称
            </summary>
        </member>
        <member name="T:CYBD.Authority.AdminGroupPermission">
            <summary>
            后台权限系统 - 管理员组权限
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    后台权限系统 - 管理员权限
                             
             History:        2015/4/8 17:44:41 创建
                             
            </remarks>
        </member>
        <member name="P:CYBD.Authority.AdminGroupPermission.PermissionId">
            <summary>
            权限ID
            </summary>
        </member>
        <member name="P:CYBD.Authority.AdminGroupPermission.AdminGroupId">
            <summary>
            管理员组ID
            </summary>
        </member>
        <member name="P:CYBD.Authority.AdminGroupPermission.Controller">
            <summary>
            控制器
            </summary>
        </member>
        <member name="P:CYBD.Authority.AdminGroupPermission.Action">
            <summary>
            视图
            </summary>
        </member>
        <member name="T:CYBD.Authority.AdminControllerPermission">
            <summary>
            后台权限系统 - 后台管理权限
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    后台权限系统 - 后台管理权限
                             
             History:        2015/4/8 19:36:22 创建
                             
            </remarks>
        </member>
        <member name="P:CYBD.Authority.AdminControllerPermission.Name">
            <summary>
            控制器名称
            </summary>
        </member>
        <member name="P:CYBD.Authority.AdminControllerPermission.Caption">
            <summary>
            权限名称
            </summary>
        </member>
        <member name="P:CYBD.Authority.AdminControllerPermission.Priority">
            <summary>
            展示优先级，值越大越靠前
            </summary>
        </member>
        <member name="T:CYBD.Authority.AdminLoginRecord">
            <summary>
            后台权限系统 - 管理员登录记录
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    后台权限系统 - 管理员登录记录
                             
             History:        2015/4/8 17:35:45 创建
                             
            </remarks>
        </member>
        <member name="P:CYBD.Authority.AdminLoginRecord.RecordId">
            <summary>
            
            </summary>
        </member>
        <member name="P:CYBD.Authority.AdminLoginRecord.AdminId">
            <summary>
            管理员ID
            </summary>
        </member>
        <member name="P:CYBD.Authority.AdminLoginRecord.LoginIp">
            <summary>
            最后登陆IP
            </summary>
        </member>
        <member name="P:CYBD.Authority.AdminLoginRecord.LoginTime">
            <summary>
            最后登陆时间
            </summary>
        </member>
        <member name="P:CYBD.Authority.AdminLoginRecord.UserAgent">
            <summary>
            客户端的完整用户代理字符串
            </summary>
        </member>
        <member name="T:CYBD.Context.FilterBase`1">
            <summary>
            查询筛选器基类
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    查询筛选器基类
                             
             History:        2014/08/05 11:54:20 创建
            </remarks>
        </member>
        <member name="M:CYBD.Context.FilterBase`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CYBD.Context.FilterBase`1.LoadFromForm">
            <summary>
            从表单中加载筛选器属性值
            </summary>
        </member>
        <member name="M:CYBD.Context.FilterBase`1.LoadFromForm(System.Web.HttpContext)">
            <summary>
            从表单中加载筛选器属性值
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:CYBD.Context.FilterBase`1.Apply(System.String)">
            <summary>
            
            </summary>
            <param name="filterName"></param>
        </member>
        <member name="M:CYBD.Context.FilterBase`1.Apply(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="filterName"></param>
            <param name="targetUrl"></param>
        </member>
        <member name="M:CYBD.Context.FilterBase`1.Apply(System.Web.HttpContext,System.String)">
            <summary>
            执行筛选搜索跳转
            </summary>
            <param name="context"></param>
            <param name="filterName"></param>
        </member>
        <member name="M:CYBD.Context.FilterBase`1.Apply(System.Web.HttpContext,System.String,System.String)">
            <summary>
            执行筛选搜索跳转
            </summary>
            <param name="context"></param>
            <param name="filterName"></param>
            <param name="targetUrl"></param>
        </member>
        <member name="M:CYBD.Context.FilterBase`1.GetFilter(System.String)">
            <summary>
            
            </summary>
            <param name="filterName"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Context.FilterBase`1.GetFilter(System.Web.HttpContext,System.String)">
            <summary>
            获取筛选器对象
            </summary>
            <param name="context"></param>
            <param name="filterName"></param>
            <returns></returns>
        </member>
        <member name="P:CYBD.Context.FilterBase`1.IsNull">
            <summary>
            标记筛选器是否已经载入筛选属性
            </summary>
        </member>
        <member name="T:CYBD.Context.FilterItemAttribute">
            <summary>
            查询筛选器条件字段属性
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    查询筛选器基类
                             
             History:        2014/08/05 11:54:20 创建
            </remarks>
        </member>
        <member name="P:CYBD.Context.FilterItemAttribute.FieldName">
            <summary>
            指定这个过滤项对应的表单名称/数据表字段名称（如果不指定，将自动按照属性名称）
            </summary>
        </member>
        <member name="T:CYBD.Context.InfoPot">
            <summary>
            请求操作信息容器
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    请求操作信息容器
                             
             History:        2011/08/05 11:54:20 创建
            </remarks>
        </member>
        <member name="F:CYBD.Context.InfoPot.CIKEY_INFO_POT_CONTAINER">
            <summary>
            
            </summary>
        </member>
        <member name="M:CYBD.Context.InfoPot.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CYBD.Context.InfoPot.#ctor(System.Web.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:CYBD.Context.InfoPot.GetKey``1(System.String[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="paramNames"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Context.InfoPot.Throw``1(System.String[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CYBD.Context.InfoPot.Throw``1(``0,System.String[])">
            <summary>
            
            </summary>
            <param name="info"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CYBD.Context.InfoPot.GetFirst">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Context.InfoPot.GetFirst``1">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:CYBD.Context.InfoPot.Context">
            <summary>
            
            </summary>
        </member>
        <member name="P:CYBD.Context.InfoPot.Infos">
            <summary>
            
            </summary>
        </member>
        <member name="P:CYBD.Context.InfoPot.HasInfo">
            <summary>
            
            </summary>
        </member>
        <member name="T:CYBD.Context.SimpleInfo">
            <summary>
            请求上下文操作信息基类
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    请求上下文操作信息基类
                             
             History:        2011/08/05 12:54:20 创建
            </remarks>
        </member>
        <member name="M:CYBD.Context.SimpleInfo.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:CYBD.Context.SimpleInfo.InfoCode">
            <summary>
            操作结果代码码
            </summary>
        </member>
        <member name="P:CYBD.Context.SimpleInfo.Text">
            <summary>
            信息内容
            </summary>
        </member>
        <member name="T:CYBD.Context.XContext">
            <summary>
            请求上下文封装类
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    请求上下文封装类
                             
             History:        2011/08/05 10:51:21 创建
            </remarks>
        </member>
        <member name="F:CYBD.Context.XContext.CIKEY_CURRENT_XCONTEXT">
            <summary>
            
            </summary>
        </member>
        <member name="F:CYBD.Context.XContext.CIKEY_PAGE_PROCESS_TIME">
            <summary>
            当前请求页面执行时间缓存键名称
            </summary>
        </member>
        <member name="F:CYBD.Context.XContext.CIKEY_DB_QUERY_TIMES">
            <summary>
            当前请求页面数据库查询次数缓存键名称
            </summary>
        </member>
        <member name="M:CYBD.Context.XContext.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CYBD.Context.XContext.Init">
            <summary>
            
            </summary>
        </member>
        <member name="M:CYBD.Context.XContext.StartPageProcessWatch">
            <summary>
            开启页面计时器
            </summary>
        </member>
        <member name="M:CYBD.Context.XContext.GetPageProcessTime">
            <summary>
            获取页面执行时间
            依赖于在Application_BeginRequest调用StartPageProcessWatch方法开始计时
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Context.XContext.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:CYBD.Context.XContext.Current">
            <summary>
            
            </summary>
        </member>
        <member name="P:CYBD.Context.XContext.Context">
            <summary>
            
            </summary>
        </member>
        <member name="P:CYBD.Context.XContext.Request">
            <summary>
            
            </summary>
        </member>
        <member name="P:CYBD.Context.XContext.Response">
            <summary>
            
            </summary>
        </member>
        <member name="P:CYBD.Context.XContext.InfoPot">
            <summary>
            
            </summary>
        </member>
        <member name="P:CYBD.Context.XContext.QueryTimes">
            <summary>
            记录当前请求页面数据库查询次数
            </summary>
        </member>
        <member name="T:CYBD.DataAccess.DataOrderType">
            <summary>
            查询数据排序类型
            </summary>
        </member>
        <member name="F:CYBD.DataAccess.DataOrderType.DESC">
            <summary>
            降序
            </summary>
        </member>
        <member name="F:CYBD.DataAccess.DataOrderType.ASC">
            <summary>
            升序
            </summary>
        </member>
        <member name="T:CYBD.DataAccess.PagerQueryMode">
            <summary>
            分页数据请求方式
            </summary>
        </member>
        <member name="F:CYBD.DataAccess.PagerQueryMode.Code">
            <summary>
            在代码中拼接
            </summary>
        </member>
        <member name="F:CYBD.DataAccess.PagerQueryMode.StoredProcedure">
            <summary>
            使用存储过程，此方式不支持查询条件参数化
            </summary>
        </member>
        <member name="T:CYBD.DataAccess.SqlQueryPager">
            <summary>
            SqlServer分页数据请求对象
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    SqlServer分页数据请求对象
                             
             History:        2010/10/12 11:28:10 创建
                             2015/04/25 重构
            </remarks>
        </member>
        <member name="M:CYBD.DataAccess.SqlQueryPager.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CYBD.DataAccess.SqlQueryPager.#ctor(CYBD.DataAccess.SqlQuery)">
            <summary>
            
            </summary>
            <param name="query"></param>
        </member>
        <member name="M:CYBD.DataAccess.SqlQueryPager.GetOrderString">
            <summary>
            将 OrderFields 转换成排序的sql语句，不包含"ORDER BY"
            (私有方法)
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.DataAccess.SqlQueryPager.GetOrderString(System.Boolean)">
            <summary>
            将 OrderFields 转换成排序的sql语句，不包含"ORDER BY"
            (私有方法)
            </summary>
            <param name="reverse">是否反向</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.DataAccess.SqlQueryPager.GetSafeObjectName(System.String)">
            <summary>
            获取安全的数据库对象名，如加上 []
            (私有方法)
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.DataAccess.SqlQueryPager.BuildSql">
            <summary>
            根据设定的条件构建Sql语句与Sql参数
            (私有方法)
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.DataAccess.SqlQueryPager.AddOrderField(System.String,CYBD.DataAccess.DataOrderType)">
            <summary>
            添加排序字段
            </summary>
            <param name="fieldName"></param>
            <param name="orderType"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.DataAccess.SqlQueryPager.RemoveOrderField(System.String)">
            <summary>
            移除排序字段
            </summary>
            <param name="fieldName"></param>
        </member>
        <member name="M:CYBD.DataAccess.SqlQueryPager.ExecutePageReader">
            <summary>
            以DataReader方式查询分页数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.DataAccess.SqlQueryPager.QueryForPageEntityList``1">
            <summary>
            查询返回实体对象列表
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CYBD.DataAccess.SqlQueryPager.QueryForPageEntityList``1(System.String)">
            <summary>
            查询返回实体对象列表
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields">要查询的是哪些字段，英文逗号分隔</param>
        </member>
        <member name="M:CYBD.DataAccess.SqlQueryPager.QueryForEntityDictionary``2(System.String)">
            <summary>
            查询返回实体对象字典
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="keyField"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.DataAccess.SqlQueryPager.QueryForEntityDictionary``2(System.String,System.String)">
            <summary>
            查询返回实体对象字典
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="keyField"></param>
            <param name="fields">要查询哪些字段，英文逗号分隔</param>
        </member>
        <member name="P:CYBD.DataAccess.SqlQueryPager.OrderFields">
            <summary>
            排序字段集，如果排序字段仅为主键，可以采用指定 PrimaryKey 与 PKOrderType来获取更佳的性能
            </summary>
        </member>
        <member name="P:CYBD.DataAccess.SqlQueryPager.Query">
            <summary>
            所属的数据库访问实例
            </summary>
        </member>
        <member name="P:CYBD.DataAccess.SqlQueryPager.PagerInfo">
            <summary>
            分页信息，包含当前第几页，每页查询数据量以及数据总量
            如果指定了数据总量，查询性能将更佳
            </summary>
        </member>
        <member name="P:CYBD.DataAccess.SqlQueryPager.IsQueryCount">
            <summary>
            是否查询数据条数，如果有查询，则 PagerInfo.RecordCount 会在查询后被进行赋值
            </summary>
        </member>
        <member name="P:CYBD.DataAccess.SqlQueryPager.TableName">
            <summary>
            查询的表名
            </summary>
        </member>
        <member name="P:CYBD.DataAccess.SqlQueryPager.WithNolock">
            <summary>
            是否以 WITH(NOLOCK)方式查询
            </summary>
        </member>
        <member name="P:CYBD.DataAccess.SqlQueryPager.ResultFields">
            <summary>
            查询的字段集，如[ProductId],[ProductName],[Price]
            </summary>
        </member>
        <member name="P:CYBD.DataAccess.SqlQueryPager.PrimaryKey">
            <summary>
            主键字段名，必须是唯一。
            如果指定了本字段，在PagerQueryMethod.Code_TopMax与PagerQueryMethod.SP_TopMax模式时，
            且没有指定排序字段集或者排序字段等同于本字段，则将使用MAX/MIN方式取分页
            </summary>
        </member>
        <member name="P:CYBD.DataAccess.SqlQueryPager.PKOrderType">
            <summary>
            主键排序方式
            </summary>
        </member>
        <member name="P:CYBD.DataAccess.SqlQueryPager.WhereString">
            <summary>
            查询条件语句，不包含"WHERE"
            </summary>
        </member>
        <member name="P:CYBD.DataAccess.SqlQueryPager.Mode">
            <summary>
            查询数据的方式，代码拼接 或 存储过程
            </summary>
        </member>
        <member name="T:CYBD.DataAccess.XSqlDbReader">
            <summary>
            对SqlDataReader进行包装，提供更简便的数据读取接口
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    对SqlDataReader进行包装，提供更简便的数据读取接口
                             
             History:        2010/10/12 9:18:23 创建
            </remarks>
        </member>
        <member name="T:CYBD.Model.DataReaderWrap">
            <summary>
            对DataReader进行包装，提供更简便的数据读取接口
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    对DataReader进行包装，提供更简便的数据读取接口
                             
             History:        2010/8/12 10:11:20 创建
            </remarks>
        </member>
        <member name="M:CYBD.Model.DataReaderWrap.#ctor(System.Data.IDataReader)">
            <summary>
            构造DataReader包装
            </summary>
            <param name="reader">原DataReader</param>
        </member>
        <member name="M:CYBD.Model.DataReaderWrap.NextResult">
            <summary>
            等效于DataReader.NextResult()方法
            </summary>
        </member>
        <member name="M:CYBD.Model.DataReaderWrap.ContainsField(System.String)">
            <summary>
            判断结果集是否存在指定的字段
            </summary>
        </member>
        <member name="M:CYBD.Model.DataReaderWrap.IndexOf(System.String)">
            <summary>
            获取字段的索引位置
            </summary>
            <param name="name">字段名</param>
            <returns>字段的索引位置或者-1</returns>
        </member>
        <member name="M:CYBD.Model.DataReaderWrap.Get(System.String)">
            <summary>
            获取字段的值
            </summary>
            <param name="name">字段名称</param>
            <returns>字段的值</returns>
        </member>
        <member name="M:CYBD.Model.DataReaderWrap.Get(System.Int32)">
            <summary>
            获取字段的值
            </summary>
            <param name="index">字段的索引位置</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.DataReaderWrap.Get(System.String,System.Object)">
            <summary>
            获取字段的值
            </summary>
            <param name="name">字段名称</param>
            <param name="defaultValue">在找不到字段或者字段值为DBNull时的默认返回值</param>
            <returns>字段的值</returns>
        </member>
        <member name="M:CYBD.Model.DataReaderWrap.Get(System.Int32,System.Object)">
            <summary>
            获取字段的值
            </summary>
            <param name="index">字段的索引位置</param>
            <param name="defaultValue">在找不到字段或者字段值为DBNull时的默认返回值</param>
            <returns>字段的值</returns>
        </member>
        <member name="M:CYBD.Model.DataReaderWrap.Get(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="resultType"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.DataReaderWrap.Get(System.Int32,System.Type)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="resultType"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.DataReaderWrap.Get(System.String,System.Object,System.Type)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <param name="resultType"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.DataReaderWrap.Get(System.Int32,System.Object,System.Type)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="defaultValue"></param>
            <param name="resultType"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.DataReaderWrap.Get``1(System.String)">
            <summary>
            获取字段的值
            </summary>
            <typeparam name="T">返回类型，无法进行类型转换时将产生异常</typeparam>
            <param name="name">字段名称</param>
            <returns>字段的值</returns>
        </member>
        <member name="M:CYBD.Model.DataReaderWrap.Get``1(System.Int32)">
            <summary>
            获取字段的值
            </summary>
            <typeparam name="T">返回类型，无法进行类型转换时将产生异常</typeparam>
            <param name="index">字段的索引位置</param>
            <returns>字段的值</returns>
        </member>
        <member name="M:CYBD.Model.DataReaderWrap.Get``1(System.String,``0)">
            <summary>
            获取字段的值
            </summary>
            <typeparam name="T">返回类型，无法进行类型转换时将产生异常</typeparam>
            <param name="name">字段名称</param>
            <param name="defaultValue">在找不到字段或者字段值为DBNull时的默认返回值</param>
            <returns>字段的值</returns>
        </member>
        <member name="M:CYBD.Model.DataReaderWrap.Get``1(System.Int32,``0)">
            <summary>
            获取字段的值
            </summary>
            <typeparam name="T">返回类型，无法进行类型转换时将产生异常</typeparam>
            <param name="index">字段的索引位置</param>
            <param name="defaultValue">在找不到字段或者字段值为DBNull时的默认返回值</param>
            <returns>字段的值</returns>
        </member>
        <member name="M:CYBD.Model.DataReaderWrap.GetNullable``1(System.String)">
            <summary>
            以Nullable形式获取字段的值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="name">字段名称</param>
            <returns>字段的值或者T类型的默认值</returns>
        </member>
        <member name="M:CYBD.Model.DataReaderWrap.GetNullable``1(System.Int32)">
            <summary>
            以Nullable形式获取字段的值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="index">字段的索引位置</param>
            <returns>字段的值或者T类型的默认值</returns>
        </member>
        <member name="M:CYBD.Model.DataReaderWrap.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:CYBD.Model.DataReaderWrap.InnerReader">
            <summary>
            原DataReader
            </summary>
        </member>
        <member name="P:CYBD.Model.DataReaderWrap.Next">
            <summary>
            等效于DataReader.Read()方法
            </summary>
        </member>
        <member name="M:CYBD.DataAccess.XSqlDbReader.#ctor(System.Data.SqlClient.SqlDataReader)">
            <summary>
            
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:CYBD.DataAccess.XSqlDbReader.Get(System.Int32,System.Object,System.Type)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="defaultValue"></param>
            <param name="resultType"></param>
            <returns></returns>
        </member>
        <member name="T:CYBD.Common.HttpMethod">
            <summary>
            数据传输类型
            </summary>
        </member>
        <member name="F:CYBD.Common.HttpMethod.All">
            <summary>
            
            </summary>
        </member>
        <member name="F:CYBD.Common.HttpMethod.Get">
            <summary>
            
            </summary>
        </member>
        <member name="F:CYBD.Common.HttpMethod.Post">
            <summary>
            
            </summary>
        </member>
        <member name="T:CYBD.Common.Globals">
            <summary>
            全局变量,常量,etc...
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    全局变量,常量,etc...
                             
             History:        2010/10/10 10:18:20 创建
            </remarks>
        </member>
        <member name="F:CYBD.Common.Globals.EMPTY_MD5">
            <summary>
            空MD5
            </summary>
        </member>
        <member name="F:CYBD.Common.Globals.SQL_MIN_DATE_TIME">
            <summary>
            SQL SERVER最小时间值
            </summary>
        </member>
        <member name="F:CYBD.Common.Globals.SQL_MAX_DATE_TIME">
            <summary>
            SQL SERVER最大时间值
            </summary>
        </member>
        <member name="P:CYBD.Common.Globals.Now">
            <summary>
            当前时间(与数据库同步)
            </summary>
        </member>
        <member name="P:CYBD.Common.Globals.TimeIntervalBetweenAppAndDb">
            <summary>
            程序当前时间与数据库当前时间的相差毫秒数
            </summary>
        </member>
        <member name="P:CYBD.Common.Globals.RelativeWebRoot">
            <summary>
            获取网站虚拟根目录根路径,如/WebRoot/
            </summary>
        </member>
        <member name="P:CYBD.Common.Globals.HostURL">
            <summary>
            程序域名网址如: http://www.51xuanxiao.com
            </summary>
        </member>
        <member name="P:CYBD.Common.Globals.BaseURL">
            <summary>
            获取网站根目录网址,包括端口号,如Http://www.1986z.com:80/WebRoot/
            </summary>
        </member>
        <member name="T:CYBD.Model.ActionFailedError">
            <summary>
            操作失败错误信息
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    操作失败错误信息
                             
             History:        2015/4/5 22:07:48 创建
                             
            </remarks>
        </member>
        <member name="T:CYBD.Model.EmptyAccountError">
            <summary>
            
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    
                             
             History:        2015/4/30 14:12:59 创建
                             
            </remarks>
        </member>
        <member name="T:CYBD.Model.EmptyUsernameError">
            <summary>
            
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    
                             
             History:        2015/4/30 14:12:59 创建
                             
            </remarks>
        </member>
        <member name="T:CYBD.Model.EmptyPasswordError">
            <summary>
            
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    
                             
             History:        2015/4/30 14:12:59 创建
                             
            </remarks>
        </member>
        <member name="T:CYBD.Model.EmptyEmailError">
            <summary>
            
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    
                             
             History:        2015/4/30 14:12:59 创建
                             
            </remarks>
        </member>
        <member name="T:CYBD.Model.IllegalAccountFormatError">
            <summary>
            
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    
                             
             History:        2015/4/30 14:12:59 创建
                             
            </remarks>
        </member>
        <member name="T:CYBD.Model.IllegalUsernameFormatError">
            <summary>
            
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    
                             
             History:        2015/4/30 14:12:59 创建
                             
            </remarks>
        </member>
        <member name="T:CYBD.Model.IllegalEmailFormatError">
            <summary>
            
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    
                             
             History:        2015/4/30 14:12:59 创建
                             
            </remarks>
        </member>
        <member name="T:CYBD.Model.EmptyMobileError">
            <summary>
            
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    
                             
             History:        2015/4/30 14:12:59 创建
                             
            </remarks>
        </member>
        <member name="T:CYBD.Model.EmptyNameError">
            <summary>
            
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    
                             
             History:        2015/4/30 14:12:59 创建
                             
            </remarks>
        </member>
        <member name="T:CYBD.Model.PageActionResultType">
            <summary>
            页面操作结果
            </summary>
        </member>
        <member name="F:CYBD.Model.PageActionResultType.Default">
            <summary>
            无操作
            </summary>
        </member>
        <member name="F:CYBD.Model.PageActionResultType.Success">
            <summary>
            操作成功
            </summary>
        </member>
        <member name="F:CYBD.Model.PageActionResultType.Failed">
            <summary>
            操作失败
            </summary>
        </member>
        <member name="T:CYBD.Model.PageActionResult">
            <summary>
            页面操作结果
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    页面操作结果
                             
             History:        2010/6/14 13:38:21 创建
            </remarks>
        </member>
        <member name="M:CYBD.Model.PageActionResult.#ctor">
            <summary>
            默认实例化，从COOKIE中获取信息
            </summary>
        </member>
        <member name="M:CYBD.Model.PageActionResult.#ctor(CYBD.Model.PageActionResultType)">
            <summary>
            
            </summary>
            <param name="resultType"></param>
        </member>
        <member name="M:CYBD.Model.PageActionResult.#ctor(CYBD.Model.PageActionResultType,System.Object)">
            <summary>
            
            </summary>
            <param name="resultType"></param>
            <param name="data"></param>
        </member>
        <member name="M:CYBD.Model.PageActionResult.#ctor(CYBD.Model.PageActionResultType,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="resultType"></param>
            <param name="message"></param>
            <param name="errorCode"></param>
        </member>
        <member name="M:CYBD.Model.PageActionResult.#ctor(CYBD.Model.PageActionResultType,System.String,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="resultType"></param>
            <param name="message"></param>
            <param name="errorCode"></param>
            <param name="keywords"></param>
        </member>
        <member name="M:CYBD.Model.PageActionResult.#ctor(CYBD.Model.PageActionResultType,System.String,System.Int32,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="resultType"></param>
            <param name="message"></param>
            <param name="errorCode"></param>
            <param name="keywords"></param>
            <param name="data"></param>
        </member>
        <member name="M:CYBD.Model.PageActionResult.ToJSON">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:CYBD.Model.PageActionResult.Result">
            <summary>
            
            </summary>
        </member>
        <member name="P:CYBD.Model.PageActionResult.Message">
            <summary>
            
            </summary>
        </member>
        <member name="P:CYBD.Model.PageActionResult.ErrorCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:CYBD.Model.PageActionResult.Keywords">
            <summary>
            
            </summary>
        </member>
        <member name="P:CYBD.Model.PageActionResult.Data">
            <summary>
            
            </summary>
        </member>
        <member name="T:CYBD.Model.PageHelper">
            <summary>
            页面通用助手
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    帮助封装一些常用方法与属性
                             
             History:        2010/07/25 14:25:20 创建
            </remarks>
        </member>
        <member name="M:CYBD.Model.PageHelper.Get(System.String)">
            <summary>
            获取WEB提交传递的值,使用HttpMethod.Get方法,默认值为空字符串
            </summary>
            <param name="name">表单或参数名称</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.Get(System.String,System.String)">
            <summary>
            获取WEB提交传递的值,使用HttpMethod.Get方法
            </summary>
            <param name="name">表单或参数名称</param>
            <param name="defaultValue">默认值</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.Get(System.String,CYBD.Common.HttpMethod)">
            <summary>
            获取WEB提交传递的值,默认值为空字符串
            </summary>
            <param name="name">表单或参数名称</param>
            <param name="method">提交的方式</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.Get(System.String,CYBD.Common.HttpMethod,System.String)">
            <summary>
            获取WEB提交传递的值
            </summary>
            <param name="name">表单或参数名称</param>
            <param name="method">提交的方式</param>
            <param name="defaultValue">默认值</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.Get(System.String,CYBD.Common.HttpMethod,System.String,System.Boolean)">
            <summary>
            获取WEB提交传递的值
            </summary>
            <param name="name">表单或参数名称</param>
            <param name="method">提交的方式</param>
            <param name="defaultValue">默认值</param>
            <param name="trim">是否去掉前后空格</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.GetInt(System.String)">
            <summary>
            获取WEB提交传递的32位整型值,使用HttpMethod.Get方法,默认值为0
            </summary>
            <param name="name">表单或参数名称</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.GetInt(System.String,System.Int32)">
            <summary>
            获取WEB提交传递的32位整型值,使用HttpMethod.Get方法
            </summary>
            <param name="name">表单或参数名称</param>
            <param name="defaultValue">默认值</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.GetInt(System.String,CYBD.Common.HttpMethod)">
            <summary>
            获取WEB提交传递的32位整型值,默认值为空字符串
            </summary>
            <param name="name">表单或参数名称</param>
            <param name="method">提交的方式</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.GetInt(System.String,CYBD.Common.HttpMethod,System.Int32)">
            <summary>
            获取WEB提交传递的32位整型值
            </summary>
            <param name="name">表单或参数名称</param>
            <param name="method">提交的方式</param>
            <param name="defaultValue">默认值</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.GetByte(System.String)">
            <summary>
            获取WEB提交传递的8位无符号整型值,使用HttpMethod.Get方法,默认值为0
            </summary>
            <param name="name">表单或参数名称</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.GetByte(System.String,System.Byte)">
            <summary>
            获取WEB提交传递的8位无符号整型值,使用HttpMethod.Get方法
            </summary>
            <param name="name">表单或参数名称</param>
            <param name="defaultValue">默认值</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.GetByte(System.String,CYBD.Common.HttpMethod)">
            <summary>
            获取WEB提交传递的8位无符号整型值,默认值为空字符串
            </summary>
            <param name="name">表单或参数名称</param>
            <param name="method">提交的方式</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.GetByte(System.String,CYBD.Common.HttpMethod,System.Byte)">
            <summary>
            获取WEB提交传递的8位无符号整型值
            </summary>
            <param name="name">表单或参数名称</param>
            <param name="method">提交的方式</param>
            <param name="defaultValue">默认值</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.GetInt16(System.String)">
            <summary>
            获取WEB提交传递的16位整型值,使用HttpMethod.Get方法,默认值为0
            </summary>
            <param name="name">表单或参数名称</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.GetInt16(System.String,System.Int16)">
            <summary>
            获取WEB提交传递的16位整型值,使用HttpMethod.Get方法
            </summary>
            <param name="name">表单或参数名称</param>
            <param name="defaultValue">默认值</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.GetInt16(System.String,CYBD.Common.HttpMethod)">
            <summary>
            获取WEB提交传递的16位整型值,默认值为空字符串
            </summary>
            <param name="name">表单或参数名称</param>
            <param name="method">提交的方式</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.GetInt16(System.String,CYBD.Common.HttpMethod,System.Int16)">
            <summary>
            获取WEB提交传递的16位整型值
            </summary>
            <param name="name">表单或参数名称</param>
            <param name="method">提交的方式</param>
            <param name="defaultValue">默认值</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.GetInt64(System.String)">
            <summary>
            获取WEB提交传递的64位整型值,使用HttpMethod.Get方法,默认值为0
            </summary>
            <param name="name">表单或参数名称</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.GetInt64(System.String,System.Int64)">
            <summary>
            获取WEB提交传递的64位整型值,使用HttpMethod.Get方法
            </summary>
            <param name="name">表单或参数名称</param>
            <param name="defaultValue">默认值</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.GetInt64(System.String,CYBD.Common.HttpMethod)">
            <summary>
            获取WEB提交传递的64位整型值,默认值为空字符串
            </summary>
            <param name="name">表单或参数名称</param>
            <param name="method">提交的方式</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.GetInt64(System.String,CYBD.Common.HttpMethod,System.Int64)">
            <summary>
            获取WEB提交传递的64位整型值
            </summary>
            <param name="name">表单或参数名称</param>
            <param name="method">提交的方式</param>
            <param name="defaultValue">默认值</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.GetDecimal(System.String)">
            <summary>
            获取WEB提交传递的十进制数字值,使用HttpMethod.Get方法,默认值为0
            </summary>
            <param name="name">表单或参数名称</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.GetDecimal(System.String,System.Decimal)">
            <summary>
            获取WEB提交传递的十进制数字值,使用HttpMethod.Get方法
            </summary>
            <param name="name">表单或参数名称</param>
            <param name="defaultValue">默认值</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.GetDecimal(System.String,CYBD.Common.HttpMethod)">
            <summary>
            获取WEB提交传递的十进制数字值,默认值为空字符串
            </summary>
            <param name="name">表单或参数名称</param>
            <param name="method">提交的方式</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.GetDecimal(System.String,CYBD.Common.HttpMethod,System.Decimal)">
            <summary>
            获取WEB提交传递的十进制数字值
            </summary>
            <param name="name">表单或参数名称</param>
            <param name="method">提交的方式</param>
            <param name="defaultValue">默认值</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.Get``1(System.String)">
            <summary>
            获取WEB提交传递的值
            </summary>
            <param name="name">表单或参数名称</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.Get``1(System.String,``0)">
            <summary>
            获取WEB提交传递的值
            </summary>
            <param name="name">表单或参数名称</param>
            <param name="defaultValue">默认值</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.Get``1(System.String,CYBD.Common.HttpMethod)">
            <summary>
            获取WEB提交传递的值
            </summary>
            <param name="name">表单或参数名称</param>
            <param name="method">提交的方式</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.Get``1(System.String,CYBD.Common.HttpMethod,``0)">
            <summary>
            获取WEB提交传递的值
            </summary>
            <param name="name">表单或参数名称</param>
            <param name="method">提交的方式</param>
            <param name="defaultValue">默认值</param>
        </member>
        <member name="M:CYBD.Model.PageHelper.IF(System.Boolean,System.String)">
            <summary>
            是否条件快捷输出
            </summary>
            <param name="yesOrNo">是否条件表达式</param>
            <param name="yesOutput">为真时的输出</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.PageHelper.IF(System.Boolean,System.String,System.String)">
            <summary>
            是否条件快捷输出
            </summary>
            <param name="yesOrNo">是否条件表达式</param>
            <param name="yesOutput">为真时的输出</param>
            <param name="noOutput">为假时的输出</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.PageHelper.SIZE(System.Int64)">
            <summary>
            通用友好文件大小格式
            </summary>
            <param name="bytes">字节数</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.PageHelper.CUT(System.String)">
            <summary>
            按最大长度裁剪字符串
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.PageHelper.CUT(System.String,System.String)">
            <summary>
            按最大长度裁剪字符串
            </summary>
            <param name="text"></param>
            <param name="sign">补足符号</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.PageHelper.CUT(System.String,System.Int32)">
            <summary>
            按最大长度裁剪字符串
            </summary>
            <param name="text"></param>
            <param name="maxLen">最大长度</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.PageHelper.CUT(System.String,System.Int32,System.String)">
            <summary>
            按最大长度裁剪字符串
            </summary>
            <param name="text"></param>
            <param name="maxLen">最大长度</param>
            <param name="sign">补足符号</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.PageHelper.DATE(System.DateTime)">
            <summary>
            输出标题日期字符串
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.PageHelper.TIME(System.DateTime)">
            <summary>
            输出标题时间字符串
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.PageHelper.DATETIME(System.DateTime)">
            <summary>
            输出标题时间字符串
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.PageHelper.TIMESTAMP(System.DateTime)">
            <summary>
            输出时间戳
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.PageHelper.OUT_DATE(System.Nullable{System.DateTime})">
            <summary>
            输出标题日期字符串
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.PageHelper.OUT_TIME(System.Nullable{System.DateTime})">
            <summary>
            输出标题时间字符串
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.PageHelper.OUT_DATETIME(System.Nullable{System.DateTime})">
            <summary>
            输出标题时间字符串
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.PageHelper.HIGHLIGHT(System.String,System.String)">
            <summary>
            加亮字符串中指定的关键词
            </summary>
            <param name="text"></param>
            <param name="keywords">要加亮的关键词</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.PageHelper.HIGHLIGHT(System.String,System.String,System.String)">
            <summary>
            加亮字符串中指定的关键词
            </summary>
            <param name="text"></param>
            <param name="keywords">要加亮的关键词</param>
            <param name="css">使用的css样式名</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.PageHelper.HIGHLIGHT(System.String,System.String,System.String,System.String)">
            <summary>
            加亮字符串中指定的关键词
            </summary>
            <param name="text"></param>
            <param name="keywords">要加亮的关键词</param>
            <param name="tag">使用的html标签名</param>
            <param name="css">使用的css样式名</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.PageHelper.SELECTED(System.String,System.String,System.String)">
            <summary>
            html下拉选项控件的selected="selected"
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.PageHelper.SELECTED(System.String,System.Object,System.Object)">
            <summary>
            html下拉选项控件的selected="selected"
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.PageHelper.CHECKED(System.String,System.String,System.String)">
            <summary>
            html多选选项控件的checked="checked"
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.PageHelper.CHECKED(System.String,System.Object,System.Object)">
            <summary>
            html多选选项控件的checked="checked"
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.PageHelper.CHECKED``1(System.String,``0,System.Collections.Generic.IList{``0})">
            <summary>
            html多选选项控件的checked="checked"
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.PageHelper.ResolveUrl(System.String,System.String)">
            <summary>
            给当前页面地址添加指定的QueryString名值对
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.PageHelper.ResolveUrl(System.String,System.String,System.String)">
            <summary>
            给指定地址添加指定的QueryString名值对
            </summary>
            <param name="url"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:CYBD.Model.PageHelper.Context">
            <summary>
            请求上下文
            </summary>
        </member>
        <member name="P:CYBD.Model.PageHelper.Request">
            <summary>
            
            </summary>
        </member>
        <member name="P:CYBD.Model.PageHelper.Response">
            <summary>
            
            </summary>
        </member>
        <member name="T:CYBD.Model.PagerInfo">
            <summary>
            分页信息
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    分页信息
                             
             History:        2010/10/17 9:18:20 创建
            </remarks>
        </member>
        <member name="M:CYBD.Model.PagerInfo.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CYBD.Model.PagerInfo.#ctor(System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">页大小</param>
            <param name="recordCount">总记录数</param>
        </member>
        <member name="P:CYBD.Model.PagerInfo.PageIndex">
            <summary>
            请求的页面(从1开始)
            </summary>
        </member>
        <member name="P:CYBD.Model.PagerInfo.PageSize">
            <summary>
            每页数据量
            </summary>
        </member>
        <member name="P:CYBD.Model.PagerInfo.RecordCount">
            <summary>
            数据总数
            </summary>
        </member>
        <member name="P:CYBD.Model.PagerInfo.TotalPage">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:CYBD.Model.PagerInfo.OrderType">
            <summary>
            排序列表
            </summary>
        </member>
        <member name="T:CYBD.Model.StringBuffer">
            <summary>
            对StringBuilder进行加强封装
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    对StringBuilder进行加强封装
                             
             History:        2009/9/12 9:58:40 创建
            </remarks>
        </member>
        <member name="M:CYBD.Model.StringBuffer.Remove(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="startIndex"></param>
            <param name="length"></param>
        </member>
        <member name="M:CYBD.Model.StringBuffer.Replace(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:CYBD.Model.StringBuffer.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CYBD.Model.StringBuffer.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="M:CYBD.Model.StringBuffer.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:CYBD.Model.StringBuffer.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="capacity"></param>
            <param name="maxCapacity"></param>
        </member>
        <member name="M:CYBD.Model.StringBuffer.#ctor(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="capacity"></param>
        </member>
        <member name="M:CYBD.Model.StringBuffer.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="startIndex"></param>
            <param name="length"></param>
            <param name="capacity"></param>
        </member>
        <member name="M:CYBD.Model.StringBuffer.#ctor(System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="innerBuilder"></param>
        </member>
        <member name="M:CYBD.Model.StringBuffer.op_Addition(CYBD.Model.StringBuffer,System.Boolean)">
            <summary>
            模拟StringBuilder +操作符
            </summary>
            <param name="buffer"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.StringBuffer.op_Addition(CYBD.Model.StringBuffer,System.Byte)">
            <summary>
            模拟StringBuilder +操作符
            </summary>
            <param name="buffer"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.StringBuffer.op_Addition(CYBD.Model.StringBuffer,System.Char)">
            <summary>
            模拟StringBuilder +操作符
            </summary>
            <param name="buffer"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.StringBuffer.op_Addition(CYBD.Model.StringBuffer,System.Char[])">
            <summary>
            模拟StringBuilder +操作符
            </summary>
            <param name="buffer"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.StringBuffer.op_Addition(CYBD.Model.StringBuffer,System.Decimal)">
            <summary>
            模拟StringBuilder +操作符
            </summary>
            <param name="buffer"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.StringBuffer.op_Addition(CYBD.Model.StringBuffer,System.Double)">
            <summary>
            模拟StringBuilder +操作符
            </summary>
            <param name="buffer"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.StringBuffer.op_Addition(CYBD.Model.StringBuffer,System.Single)">
            <summary>
            模拟StringBuilder +操作符
            </summary>
            <param name="buffer"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.StringBuffer.op_Addition(CYBD.Model.StringBuffer,System.Int32)">
            <summary>
            模拟StringBuilder +操作符
            </summary>
            <param name="buffer"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.StringBuffer.op_Addition(CYBD.Model.StringBuffer,System.Int64)">
            <summary>
            模拟StringBuilder +操作符
            </summary>
            <param name="buffer"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.StringBuffer.op_Addition(CYBD.Model.StringBuffer,System.Object)">
            <summary>
            模拟StringBuilder +操作符
            </summary>
            <param name="buffer"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.StringBuffer.op_Addition(CYBD.Model.StringBuffer,System.SByte)">
            <summary>
            模拟StringBuilder +操作符
            </summary>
            <param name="buffer"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.StringBuffer.op_Addition(CYBD.Model.StringBuffer,System.Int16)">
            <summary>
            模拟StringBuilder +操作符
            </summary>
            <param name="buffer"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.StringBuffer.op_Addition(CYBD.Model.StringBuffer,System.String)">
            <summary>
            模拟StringBuilder +操作符
            </summary>
            <param name="buffer"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.StringBuffer.op_Addition(CYBD.Model.StringBuffer,System.UInt32)">
            <summary>
            模拟StringBuilder +操作符
            </summary>
            <param name="buffer"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.StringBuffer.op_Addition(CYBD.Model.StringBuffer,System.UInt64)">
            <summary>
            模拟StringBuilder +操作符
            </summary>
            <param name="buffer"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.StringBuffer.op_Addition(CYBD.Model.StringBuffer,System.UInt16)">
            <summary>
            模拟StringBuilder +操作符
            </summary>
            <param name="buffer"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.StringBuffer.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:CYBD.Model.StringBuffer.InnerBuilder">
            <summary>
            StringBuilder实例
            </summary>
        </member>
        <member name="P:CYBD.Model.StringBuffer.Length">
            <summary>
            长度
            </summary>
        </member>
        <member name="T:CYBD.Model.XDataColumnAttribute">
            <summary>
            标记属性为数据表字段的属性
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    标记属性为数据表字段的属性
                             
             History:        2010/10/12 11:18:23 创建
            </remarks>
        </member>
        <member name="M:CYBD.Model.XDataColumnAttribute.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CYBD.Model.XDataColumnAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="columnName"></param>
        </member>
        <member name="M:CYBD.Model.XDataColumnAttribute.#ctor(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="columnName"></param>
            <param name="identity"></param>
        </member>
        <member name="P:CYBD.Model.XDataColumnAttribute.Column">
            <summary>
            对应的数据表字段名
            </summary>
        </member>
        <member name="P:CYBD.Model.XDataColumnAttribute.Identity">
            <summary>
            是否自增长
            </summary>
        </member>
        <member name="T:CYBD.Model.XDataTableAttribute">
            <summary>
            标记实体为数据表的属性
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    标记实体为数据表的属性
                             
             History:        2010/10/12 11:17:12 创建
            </remarks>
        </member>
        <member name="M:CYBD.Model.XDataTableAttribute.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CYBD.Model.XDataTableAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="P:CYBD.Model.XDataTableAttribute.TableName">
            <summary>
            
            </summary>
        </member>
        <member name="T:CYBD.Model.XJSONColumnAttribute">
            <summary>
            标记属性为可序列化为JSON的属性
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
                             
             History:        2010/10/12 10:12:20 创建
            </remarks>
        </member>
        <member name="M:CYBD.Model.XJSONColumnAttribute.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CYBD.Model.XJSONColumnAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="keyName"></param>
        </member>
        <member name="P:CYBD.Model.XJSONColumnAttribute.Key">
            <summary>
            
            </summary>
        </member>
        <member name="T:CYBD.Model.XPager">
            <summary>
            页面分页页码模型
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    页面分页页码模型
                             
             History:        2010/10/12 15:18:50 创建
            </remarks>
        </member>
        <member name="M:CYBD.Model.XPager.#ctor(CYBD.Model.PagerInfo)">
            <summary>
            
            </summary>
            <param name="pagerInfo"></param>
        </member>
        <member name="M:CYBD.Model.XPager.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="recordCount"></param>
        </member>
        <member name="M:CYBD.Model.XPager.GetTotalPage">
            <summary>
            获取总页数
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.XPager.GetStartPage">
            <summary>
            获取开始页码
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.XPager.GetEndPage">
            <summary>
            获取结束页码
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.XPager.GetUrl(System.Int32)">
            <summary>
            获取URL
            </summary>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.XPager.GetPrevUrl">
            <summary>
            获取上一页URL
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Model.XPager.GetNextUrl">
            <summary>
            获取下一页URL
            </summary>
            <returns></returns>
        </member>
        <member name="P:CYBD.Model.XPager.ID">
            <summary>
            页码表唯一标识
            </summary>
        </member>
        <member name="P:CYBD.Model.XPager.PageIndex">
            <summary>
            第几页
            </summary>
        </member>
        <member name="P:CYBD.Model.XPager.PageSize">
            <summary>
            每页数量
            </summary>
        </member>
        <member name="P:CYBD.Model.XPager.RecordCount">
            <summary>
            总数量
            </summary>
        </member>
        <member name="P:CYBD.Model.XPager.PagerNumber">
            <summary>
            页码显示数
            </summary>
        </member>
        <member name="P:CYBD.Model.XPager.UrlFormat">
            <summary>
            URL地址格式
            </summary>
        </member>
        <member name="P:CYBD.Model.XPager.Anchor">
            <summary>
            锚点名称
            </summary>
        </member>
        <member name="P:CYBD.Model.XPager.CountInfo">
            <summary>
            统计信息内容格式
            </summary>
        </member>
        <member name="P:CYBD.Model.XPager.NoDataInfo">
            <summary>
            无数据信息
            </summary>
        </member>
        <member name="P:CYBD.Model.XPager.TotalPage">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:CYBD.Model.XPager.StartPage">
            <summary>
            开始页码
            </summary>
        </member>
        <member name="P:CYBD.Model.XPager.EndPage">
            <summary>
            结束页码
            </summary>
        </member>
        <member name="P:CYBD.Model.XPager.PrevUrl">
            <summary>
            上一页URL
            </summary>
        </member>
        <member name="P:CYBD.Model.XPager.NextUrl">
            <summary>
            下一页URL
            </summary>
        </member>
        <member name="P:CYBD.Model.XPager.JsMethod">
            <summary>
            Javascript函数名
            </summary>
        </member>
        <member name="F:CYBD.ScheduledTask.ScheduledTaskType.SecondsSpan">
            <summary>
            固定秒数
            </summary>
        </member>
        <member name="T:CYBD.ScheduledTask.ITask">
            <summary>
            计划任务接口
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    
                             
             History:        2015/6/18 15:16:46 创建
                             
            </remarks>
        </member>
        <member name="M:CYBD.ScheduledTask.ITask.Work(System.Object)">
            <summary>
            执行任务
            </summary>
        </member>
        <member name="P:CYBD.ScheduledTask.ITask.TaskId">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:CYBD.ScheduledTask.ITask.ScheduledType">
            <summary>
            计划执行类型
            </summary>
        </member>
        <member name="P:CYBD.ScheduledTask.ITask.Seconds">
            <summary>
            间隔秒数
            </summary>
        </member>
        <member name="P:CYBD.ScheduledTask.ITask.LastWorkTime">
            <summary>
            最后执行时间
            </summary>
        </member>
        <member name="T:CYBD.ScheduledTask.TaskLauncher">
            <summary>
            
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    
                             
             History:        2015/6/18 15:17:51 创建
                             
            </remarks>
        </member>
        <member name="M:CYBD.ScheduledTask.TaskLauncher.RegisterTask(CYBD.ScheduledTask.ITask)">
            <summary>
            注册计划任务
            </summary>
            <param name="task"></param>
        </member>
        <member name="M:CYBD.ScheduledTask.TaskLauncher.Go">
            <summary>
            开启计划任务
            </summary>
        </member>
        <member name="P:CYBD.ScheduledTask.TaskLauncher.ScanMilliseconds">
            <summary>
            扫瞄计划任务时间
            </summary>
        </member>
        <member name="T:CYBD.Utilities.BinaryHelper">
            <summary>
            二进制，序列化相关的助手类
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    二进制，序列化相关的助手类
                             
             History:        2012/10/12 11:18:20 创建
            </remarks>
        </member>
        <member name="M:CYBD.Utilities.BinaryHelper.SerializeClass``1(``0)">
            <summary>
            序列化一个类
            </summary>
            <param name="instance">要序列化的类的实例</param>
        </member>
        <member name="M:CYBD.Utilities.BinaryHelper.SerializeClass``1(``0,System.String)">
            <summary>
            序列化一个类,并将二进制数据保存到文件
            </summary>
            <param name="instance">要序列化的类的实例</param>
            <param name="binaryFilePath">要保存的二进制文件的物理地址</param>
        </member>
        <member name="M:CYBD.Utilities.BinaryHelper.DeSerializeClass``1(System.Byte[])">
            <summary>
            反序列化二进制数据为一个类
            </summary>
        </member>
        <member name="M:CYBD.Utilities.BinaryHelper.DeSerializeClass``1(``0@,System.String)">
            <summary>
            反序列化文件中的二进制数据为一个类
            </summary>
            <param name="instance">传递类的实例</param>
            <param name="binaryFilePath">保存的二进制文件的物理地址</param>
        </member>
        <member name="M:CYBD.Utilities.BinaryHelper.ConvertStreamToBytes(System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="fileStream"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.BinaryHelper.ConvertBase10To36(System.Int32)">
            <summary>
            转换10进制为36进制
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="T:CYBD.Utilities.CacheExpiredType">
            <summary>
            
            </summary>
        </member>
        <member name="F:CYBD.Utilities.CacheExpiredType.Absolute">
            <summary>
            绝对到期
            </summary>
        </member>
        <member name="F:CYBD.Utilities.CacheExpiredType.Sliding">
            <summary>
            滑动到期
            </summary>
        </member>
        <member name="T:CYBD.Utilities.CacheHelper">
            <summary>
            对全局缓存HttpRuntime.Cache的封装操作的助手类
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    对全局缓存HttpRuntime.Cache的封装操作的助手类
                             
             History:        2012/10/12 11:18:20 创建
            </remarks>
        </member>
        <member name="M:CYBD.Utilities.CacheHelper.Get``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="DT"></typeparam>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.CacheHelper.TryGet``1(System.String,``0@)">
            <summary>
            
            </summary>
            <typeparam name="DT"></typeparam>
            <param name="cacheKey"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.CacheHelper.Add``1(System.String,``0)">
            <summary>
            添加一个缓存数据
            注意：当该项名的缓存数据已经存在时，不会替换原来的缓存数据，而是新增一个同键名的缓存项
            </summary>
            <typeparam name="DT"></typeparam>
            <param name="cacheKey"></param>
            <param name="data"></param>
        </member>
        <member name="M:CYBD.Utilities.CacheHelper.Add``1(System.String,``0,System.String[])">
            <summary>
            添加一个缓存数据
            注意：当该项名的缓存数据已经存在时，不会替换原来的缓存数据，而是新增一个同键名的缓存项
            </summary>
            <typeparam name="DT"></typeparam>
            <param name="cacheKey"></param>
            <param name="data"></param>
            <param name="dependencyFilePaths"></param>
        </member>
        <member name="M:CYBD.Utilities.CacheHelper.Add``1(System.String,``0,CYBD.Utilities.CacheExpiredType,System.Double)">
            <summary>
            添加一个缓存数据
            注意：当该项名的缓存数据已经存在时，不会替换原来的缓存数据，而是新增一个同键名的缓存项
            </summary>
            <typeparam name="DT"></typeparam>
            <param name="cacheKey"></param>
            <param name="data"></param>
            <param name="expiredType"></param>
            <param name="expiredSeconds"></param>
        </member>
        <member name="M:CYBD.Utilities.CacheHelper.Add``1(System.String,``0,CYBD.Utilities.CacheExpiredType,System.Double,System.String[])">
            <summary>
            添加一个缓存数据
            注意：当该项名的缓存数据已经存在时，不会替换原来的缓存数据，而是新增一个同键名的缓存项
            </summary>
            <typeparam name="DT"></typeparam>
            <param name="cacheKey"></param>
            <param name="data"></param>
            <param name="expiredType"></param>
            <param name="expiredSeconds"></param>
            <param name="dependencyFilePaths"></param>
        </member>
        <member name="M:CYBD.Utilities.CacheHelper.Add``1(System.String,``0,CYBD.Utilities.CacheExpiredType,System.Double,System.String[],System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)">
            <summary>
            添加一个缓存数据
            注意：当该项名的缓存数据已经存在时，不会替换原来的缓存数据，而是新增一个同键名的缓存项
            </summary>
            <typeparam name="DT"></typeparam>
            <param name="cacheKey"></param>
            <param name="data"></param>
            <param name="expiredType"></param>
            <param name="expiredSeconds"></param>
            <param name="dependencyFilePaths"></param>
            <param name="priority"></param>
            <param name="callback"></param>
        </member>
        <member name="M:CYBD.Utilities.CacheHelper.Insert``1(System.String,``0)">
            <summary>
            添加一个缓存数据
            注意：当该项名的缓存数据已经存在时，替换原来的缓存数据
            </summary>
            <typeparam name="DT"></typeparam>
            <param name="cacheKey"></param>
            <param name="data"></param>
        </member>
        <member name="M:CYBD.Utilities.CacheHelper.Insert``1(System.String,``0,System.String[])">
            <summary>
            添加一个缓存数据
            注意：当该项名的缓存数据已经存在时，替换原来的缓存数据
            </summary>
            <typeparam name="DT"></typeparam>
            <param name="cacheKey"></param>
            <param name="data"></param>
            <param name="dependencyFilePaths"></param>
        </member>
        <member name="M:CYBD.Utilities.CacheHelper.Insert``1(System.String,``0,CYBD.Utilities.CacheExpiredType,System.Double)">
            <summary>
            添加一个缓存数据
            注意：当该项名的缓存数据已经存在时，替换原来的缓存数据
            </summary>
            <typeparam name="DT"></typeparam>
            <param name="cacheKey"></param>
            <param name="data"></param>
            <param name="expiredType"></param>
            <param name="expiredSeconds"></param>
        </member>
        <member name="M:CYBD.Utilities.CacheHelper.Insert``1(System.String,``0,CYBD.Utilities.CacheExpiredType,System.Double,System.String[])">
            <summary>
            添加一个缓存数据
            注意：当该项名的缓存数据已经存在时，替换原来的缓存数据
            </summary>
            <typeparam name="DT"></typeparam>
            <param name="cacheKey"></param>
            <param name="data"></param>
            <param name="expiredType"></param>
            <param name="expiredSeconds"></param>
            <param name="dependencyFilePaths"></param>
        </member>
        <member name="M:CYBD.Utilities.CacheHelper.Insert``1(System.String,``0,CYBD.Utilities.CacheExpiredType,System.Double,System.String[],System.Web.Caching.CacheItemUpdateCallback)">
            <summary>
            添加一个缓存数据
            注意：当该项名的缓存数据已经存在时，替换原来的缓存数据
            </summary>
            <typeparam name="DT"></typeparam>
            <param name="cacheKey"></param>
            <param name="data"></param>
            <param name="expiredType"></param>
            <param name="expiredSeconds"></param>
            <param name="dependencyFilePaths"></param>
            <param name="callback"></param>
        </member>
        <member name="M:CYBD.Utilities.CacheHelper.Insert``1(System.String,``0,CYBD.Utilities.CacheExpiredType,System.Double,System.String[],System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)">
            <summary>
            添加一个缓存数据
            注意：当该项名的缓存数据已经存在时，替换原来的缓存数据
            </summary>
            <typeparam name="DT"></typeparam>
            <param name="cacheKey"></param>
            <param name="data"></param>
            <param name="expiredType"></param>
            <param name="expiredSeconds"></param>
            <param name="dependencyFilePaths"></param>
            <param name="priority"></param>
            <param name="callback"></param>
        </member>
        <member name="M:CYBD.Utilities.CacheHelper.Remove(System.String)">
            <summary>
            清除指定键名的缓存
            </summary>
            <param name="cacheKey">键名</param>
        </member>
        <member name="M:CYBD.Utilities.CacheHelper.RemoveBySearch(System.String)">
            <summary>
            清除指定键名前缀的缓存
            </summary>
            <param name="prefix">键名前缀</param>
        </member>
        <member name="M:CYBD.Utilities.CacheHelper.RemoveBySearch(System.Collections.Generic.List{System.String})">
            <summary>
            清除指定键名前缀的缓存
            </summary>
            <param name="prefixs">键名前缀集</param>
        </member>
        <member name="M:CYBD.Utilities.CacheHelper.ClearCache">
            <summary>
            清除所有缓存
            </summary>
        </member>
        <member name="T:CYBD.Utilities.DateTimeHelper">
            <summary>
            图片操作助手
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    时间操作助手
                             
             History:        2009/6/12 15:18:27 创建
            </remarks>
        </member>
        <member name="M:CYBD.Utilities.DateTimeHelper.ConvertToUnixTimestamp(System.DateTime)">
            <summary>
            日期转换成unix时间戳
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.DateTimeHelper.ConvertToDateTime(System.Int64)">
            <summary>
            unix时间戳转换成日期
            </summary>
            <param name="unixTimeStamp">时间戳（秒）</param>
            <returns></returns>
        </member>
        <member name="T:CYBD.Utilities.CutImagePosition">
            <summary>
            裁切图片位置
            </summary>
        </member>
        <member name="F:CYBD.Utilities.CutImagePosition.TopLeft">
            <summary>
            从左上角开始
            </summary>
        </member>
        <member name="F:CYBD.Utilities.CutImagePosition.TopCenter">
            <summary>
            从顶部中间开始
            </summary>
        </member>
        <member name="F:CYBD.Utilities.CutImagePosition.TopRight">
            <summary>
            从右上角开始
            </summary>
        </member>
        <member name="F:CYBD.Utilities.CutImagePosition.MiddleRight">
            <summary>
            从右边中间开始
            </summary>
        </member>
        <member name="F:CYBD.Utilities.CutImagePosition.BottomRight">
            <summary>
            从右下角开始
            </summary>
        </member>
        <member name="F:CYBD.Utilities.CutImagePosition.BottomCenter">
            <summary>
            从底部中间开始
            </summary>
        </member>
        <member name="F:CYBD.Utilities.CutImagePosition.BottomLeft">
            <summary>
            从左下角开始
            </summary>
        </member>
        <member name="F:CYBD.Utilities.CutImagePosition.MiddleLeft">
            <summary>
            从左边中间开始
            </summary>
        </member>
        <member name="F:CYBD.Utilities.CutImagePosition.Top">
            <summary>
            
            </summary>
        </member>
        <member name="F:CYBD.Utilities.CutImagePosition.Right">
            <summary>
            
            </summary>
        </member>
        <member name="F:CYBD.Utilities.CutImagePosition.Bottom">
            <summary>
            
            </summary>
        </member>
        <member name="F:CYBD.Utilities.CutImagePosition.Left">
            <summary>
            
            </summary>
        </member>
        <member name="T:CYBD.Utilities.ImageHelper">
            <summary>
            图片操作助手
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    图片操作助手
                             
             History:        2011/10/12 11:18:20 创建
            </remarks>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.IsWebImage(System.String)">
            <summary>
            是否Web图片文件
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.BuildThumbnail(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            生成指定图片的缩略图
            </summary>
            <param name="sourceImagePath">源图片文件完整路径</param>
            <param name="targetImagePath">保存缩略图的完整路径</param>
            <param name="targetMaxWidth">最大宽度</param>
            <param name="targetMaxHeight">最大高度</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.BuildThumbnail(System.String,System.String,System.Int32@,System.Int32@)">
            <summary>
            生成指定图片的缩略图
            </summary>
            <param name="sourceImagePath">源图片文件完整路径</param>
            <param name="targetImagePath">保存缩略图的完整路径</param>
            <param name="targetMaxWidth">最大宽度，引用值</param>
            <param name="targetMaxHeight">最大高度，引用值</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.BuildThumbnail(System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            生成指定图片的缩略图
            </summary>
            <param name="sourceImagePath">源图片文件完整路径</param>
            <param name="targetImagePath">保存缩略图的完整路径</param>
            <param name="targetMaxWidth">最大宽度</param>
            <param name="targetMaxHeight">最大高度</param>
            <param name="forceUseTargetSize">强制为指定的最大宽度与高度</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.BuildThumbnail(System.String,System.String,System.Drawing.Imaging.ImageFormat,System.Int32,System.Int32,System.Boolean)">
            <summary>
            生成指定图片的缩略图
            </summary>
            <param name="sourceImagePath">源图片文件完整路径</param>
            <param name="targetImagePath">保存缩略图的完整路径</param>
            <param name="targetMaxWidth">最大宽度</param>
            <param name="targetMaxHeight">最大高度</param>
            <param name="forceUseTargetSize">强制为指定的最大宽度与高度</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.BuildThumbnail(System.String,System.String,System.Drawing.Imaging.ImageFormat,System.Int32@,System.Int32@,System.Boolean)">
            <summary>
            生成指定图片的缩略图
            </summary>
            <param name="sourceImagePath">源图片文件完整路径</param>
            <param name="targetImagePath">保存缩略图的完整路径</param>
            <param name="targetMaxWidth">最大宽度</param>
            <param name="targetMaxHeight">最大高度</param>
            <param name="forceUseTargetSize">强制为指定的最大宽度与高度</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.BuildThumbnail(System.IO.Stream,System.String,System.Int32,System.Int32)">
            <summary>
            生成指定图片的缩略图
            </summary>
            <param name="sourceImageStream">源图片文件流</param>
            <param name="targetImagePath">保存缩略图的完整路径</param>
            <param name="targetMaxWidth">最大宽度</param>
            <param name="targetMaxHeight">最大高度</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.BuildThumbnail(System.IO.Stream,System.String,System.Int32@,System.Int32@)">
            <summary>
            生成指定图片的缩略图
            </summary>
            <param name="sourceImageStream">源图片文件流</param>
            <param name="targetImagePath">保存缩略图的完整路径</param>
            <param name="targetMaxWidth">最大宽度，引用值</param>
            <param name="targetMaxHeight">最大高度，引用值</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.BuildThumbnail(System.IO.Stream,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            生成指定图片的缩略图
            </summary>
            <param name="sourceImageStream">源图片文件流</param>
            <param name="targetImagePath">保存缩略图的完整路径</param>
            <param name="targetMaxWidth">最大宽度</param>
            <param name="targetMaxHeight">最大高度</param>
            <param name="forceUseTargetSize">强制为指定的最大宽度与高度</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.BuildThumbnail(System.IO.Stream,System.String,System.Drawing.Imaging.ImageFormat,System.Int32,System.Int32,System.Boolean)">
            <summary>
            生成指定图片的缩略图
            </summary>
            <param name="sourceImageStream">源图片文件流</param>
            <param name="targetImagePath">保存缩略图的完整路径</param>
            <param name="targetMaxWidth">最大宽度</param>
            <param name="targetMaxHeight">最大高度</param>
            <param name="forceUseTargetSize">强制为指定的最大宽度与高度</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.BuildThumbnail(System.IO.Stream,System.String,System.Drawing.Imaging.ImageFormat,System.Int32@,System.Int32@,System.Boolean)">
            <summary>
            生成指定图片的缩略图
            </summary>
            <param name="sourceImageStream">源图片文件流</param>
            <param name="targetImagePath">保存缩略图的完整路径</param>
            <param name="imageFormat">图像文件格式</param>
            <param name="targetMaxWidth">最大宽度</param>
            <param name="targetMaxHeight">最大高度</param>
            <param name="forceUseTargetSize">强制为指定的最大宽度与高度</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.ParseExifItemValue(System.String,System.String)">
            <summary>
            获取EXIF指定项的值
            </summary>
            <param name="exifInfo">EXIF信息字符串</param>
            <param name="itemName">项名</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.ParseExifItemValue(System.String,System.String,System.String,System.String)">
            <summary>
            获取EXIF指定项的值
            </summary>
            <param name="exifInfo">EXIF信息字符串</param>
            <param name="itemName">项名</param>
            <param name="itemSeperator">EXIF项之间的分隔符</param>
            <param name="nameSeperator">EXIF项名与项值之间的分隔符</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.ParseExifItemValue(System.String)">
            <summary>
            获取EXIF指定项的值
            </summary>
            <param name="exifInfo">EXIF信息字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.ParseExifItemValue(System.String,System.String,System.String)">
            <summary>
            获取EXIF指定项的值
            </summary>
            <param name="exifInfo">EXIF信息字符串</param>
            <param name="itemSeperator">EXIF项之间的分隔符</param>
            <param name="nameSeperator">EXIF项名与项值之间的分隔符</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.GetExifInfo(System.String)">
            <summary>
            获取EXIF信息，默认分隔符使用"|||"与"@@"
            </summary>
            <param name="filePath">图片文件完整路径</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.GetExifInfo(System.String,System.String,System.String)">
            <summary>
            获取EXIF信息
            </summary>
            <param name="filePath">图片文件完整路径</param>
            <param name="itemSeperator">EXIF项之间的分隔符</param>
            <param name="nameSeperator">EXIF项名与项值之间的分隔符</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.GetExifInfo(System.IO.Stream)">
            <summary>
            获取EXIF信息，默认分隔符使用"|||"与"@@"
            </summary>
            <param name="stream">图片文件流</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.GetExifInfo(System.IO.Stream,System.String,System.String)">
            <summary>
            获取EXIF信息
            </summary>
            <param name="stream">图片文件流</param>
            <param name="itemSeperator">EXIF项之间的分隔符</param>
            <param name="nameSeperator">EXIF项名与项值之间的分隔符</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.GetExifInfo(System.Drawing.Image,System.String,System.String)">
            <summary>
            获取EXIF信息
            </summary>
            <param name="img">图片</param>
            <param name="itemSeperator">EXIF项之间的分隔符</param>
            <param name="nameSeperator">EXIF项名与项值之间的分隔符</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.GetValueOfType2(System.Byte[])">
            <summary>
            对type=2 的value值进行读取
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.GetValueOfType3(System.Byte[])">
            <summary>
            对type=3 的value值进行读取
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.GetValueOfType5(System.Byte[])">
            <summary>
            对type=5 的value值进行读取
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.GetValueOfType5A(System.Byte[])">
            <summary>
            获取光圈的值
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.CutImage(System.String,System.String,System.Double,CYBD.Utilities.CutImagePosition)">
            <summary>
            按百分比裁切图片
            </summary>
            <param name="sourceImagePath">原始图片地址</param>
            <param name="newImagePath">新图片地址</param>
            <param name="percentage">百分比</param>
            <param name="position">裁切开始位置</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.CutImage(System.IO.Stream,System.String,System.Double,CYBD.Utilities.CutImagePosition)">
            <summary>
            按百分比裁切图片
            </summary>
            <param name="sourceStream">原始图片流</param>
            <param name="newImagePath">新图片地址</param>
            <param name="percentage">百分比</param>
            <param name="position">裁切开始位置</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.CutImage(System.String,System.String,System.Int32,System.Int32,CYBD.Utilities.CutImagePosition)">
            <summary>
            按指定大小裁切图片，如果指定大小超过原始图片，将按原始图片尺寸输出
            </summary>
            <param name="sourceImagePath">原始图片地址</param>
            <param name="newImagePath">新图片地址</param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="position">裁切开始位置</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.ImageHelper.CutImage(System.IO.Stream,System.String,System.Int32,System.Int32,CYBD.Utilities.CutImagePosition)">
            <summary>
            按指定大小裁切图片，如果指定大小超过原始图片，将按原始图片尺寸输出
            </summary>
            <param name="sourceStream">原始图片流</param>
            <param name="newImagePath">新图片地址</param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="position">裁切开始位置</param>
            <returns></returns>
        </member>
        <member name="P:CYBD.Utilities.ImageHelper.WebImageFileExtensionList">
            <summary>
            Web图片文件后缀名列表
            </summary>
        </member>
        <member name="T:CYBD.Utilities.IOHelper">
            <summary>
            文件IO操作助手
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    文件IO操作助手
                             
             History:        2010/10/12 11:18:20 创建
            </remarks>
        </member>
        <member name="M:CYBD.Utilities.IOHelper.ComputeFileMD5Code(System.IO.Stream)">
            <summary>
            根据储存流读取文件MD5值
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.IOHelper.ReadFile(System.String)">
            <summary>
            读取指定路径文件内容，没有则返回空字符串
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.IOHelper.ReadFile(System.String,System.Text.Encoding)">
            <summary>
            读取指定路径文件内容，没有则返回空字符串
            </summary>
            <param name="path"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.IOHelper.WriteFile(System.String,System.String)">
            <summary>
            将内容写入指定路径文件
            </summary>
            <param name="path">文件完整路径</param>
            <param name="content">要写入的内容</param>
        </member>
        <member name="M:CYBD.Utilities.IOHelper.WriteFile(System.String,System.String,System.Boolean)">
            <summary>
            将内容写入指定路径文件
            </summary>
            <param name="path">文件完整路径</param>
            <param name="content">要写入的内容</param>
            <param name="append">是否附加进文件</param>
        </member>
        <member name="M:CYBD.Utilities.IOHelper.WriteFile(System.String,System.String,System.Text.Encoding)">
            <summary>
            将内容写入指定路径文件
            </summary>
            <param name="path">文件完整路径</param>
            <param name="content">要写入的内容</param>
            <param name="encoding">文件编码</param>
        </member>
        <member name="M:CYBD.Utilities.IOHelper.WriteFile(System.String,System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            将内容写入指定路径文件
            </summary>
            <param name="path">文件完整路径</param>
            <param name="content">要写入的内容</param>
            <param name="encoding">文件编码</param>
            <param name="append">是否附加进文件</param>
        </member>
        <member name="M:CYBD.Utilities.IOHelper.OutputFile(System.Web.HttpContext,System.String,System.String)">
            <summary>
            输出文件至浏览器
            </summary>
            <param name="context">当前请求上下文</param>
            <param name="filePath">服务端的文件完整路径</param>
            <param name="fileName">输出至浏览器的文件名</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.IOHelper.GetMimeType(System.String)">
            <summary>  
            根据文件后缀来获取MIME类型字符串  
            </summary>  
            <param name="extension">文件后缀名</param>  
            <returns>Mime类型</returns>  
        </member>
        <member name="M:CYBD.Utilities.IOHelper.ConvertToHexString(System.String)">
            <summary>
            为字符串中的非英文字符编码
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.IOHelper.IsUrlCharsNeedToEncode(System.Char)">
             <summary>
            指定 一个字符是否应该被编码
             </summary>
             <param name="chr"></param>
             <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.IOHelper.ConvertToHexString(System.Char)">
            <summary>
            为非英文字符串编码
            </summary>
            <param name="chr"></param>
            <returns></returns>
        </member>
        <member name="T:CYBD.Utilities.JsonHelper">
            <summary>
            JSON操作助手
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    JSON操作助手
                             
             History:        2011/9/11 19:38:20 创建
            </remarks>
        </member>
        <member name="M:CYBD.Utilities.JsonHelper.ConvertToJSONString(System.Object)">
            <summary>
            转换成JSON，基础类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.JsonHelper.ConvertToJSON(System.String,System.Object)">
            <summary>
            递归，转换成JSON
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.JsonHelper.ConvertToJSON(System.Collections.IEnumerable)">
            <summary>
            递归，转换成JSON，迭代器
            </summary>
        </member>
        <member name="M:CYBD.Utilities.JsonHelper.ConvertToJSON(System.Collections.IDictionary)">
            <summary>
            递归，转换成JSON，字典
            </summary>
        </member>
        <member name="M:CYBD.Utilities.JsonHelper.ConvertToJSON(System.Object)">
            <summary>
            转换成JSON
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:CYBD.Utilities.LogFileNameType">
            <summary>
            日志文件名命名规则
            </summary>
        </member>
        <member name="F:CYBD.Utilities.LogFileNameType.Day">
            <summary>
            按天命名
            </summary>
        </member>
        <member name="F:CYBD.Utilities.LogFileNameType.Hour">
            <summary>
            按小时
            </summary>
        </member>
        <member name="F:CYBD.Utilities.LogFileNameType.Month">
            <summary>
            按月命名
            </summary>
        </member>
        <member name="F:CYBD.Utilities.LogFileNameType.Year">
            <summary>
            按年命名
            </summary>
        </member>
        <member name="T:CYBD.Utilities.LogHelper">
            <summary>
            错误日志及其它日志的操作助手
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    错误日志及其它日志的操作助手
                             
             History:        2009/5/12 19:18:11 创建
            </remarks>
        </member>
        <member name="M:CYBD.Utilities.LogHelper.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CYBD.Utilities.LogHelper.WriteLog(System.Exception)">
            <summary>
            写入出错日志
            </summary>
            <param name="ex">异常</param>
            <returns>新日志唯一编号</returns>
        </member>
        <member name="M:CYBD.Utilities.LogHelper.WriteLog(System.Exception,System.String)">
            <summary>
            写入出错日志
            </summary>
            <param name="ex">异常</param>
            <param name="errorMessage">自定义错误消息</param>
            <returns>新日志唯一编号</returns>
        </member>
        <member name="M:CYBD.Utilities.LogHelper.WriteLog(System.Exception,System.String,System.String)">
            <summary>
            写入出错日志
            </summary>
            <param name="ex">异常</param>
            <param name="errorMessage">自定义错误消息</param>
            <param name="logDirPath">日志保存目录路径</param>
            <returns>新日志唯一编号</returns>
        </member>
        <member name="P:CYBD.Utilities.LogHelper.ErrorFileDirectoryPath">
            <summary>
            指定错误日志文件目录路径
            </summary>
        </member>
        <member name="P:CYBD.Utilities.LogHelper.LogFileNameType">
            <summary>
            错误日志文件名命名方式
            </summary>
        </member>
        <member name="T:CYBD.Utilities.MathHelper">
            <summary>
            
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    
                             
             History:        2015/6/18 16:09:23 创建
                             
            </remarks>
        </member>
        <member name="M:CYBD.Utilities.MathHelper.GetRandomInt">
            <summary>
            产生随机整数
            </summary>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.MathHelper.GetRandomInt(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            产生随机整数
            </summary>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.MathHelper.GetRandomDouble">
            <summary>
            产生随机数
            </summary>
            <returns></returns>
        </member>
        <member name="T:CYBD.Utilities.PageCacheHelper">
            <summary>
            对页面级缓存HttpContext.Items的封装操作的助手类
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    对页面级缓存HttpContext.Items的封装操作的助手类
                             
             History:        2010/10/12 11:18:20 创建
            </remarks>
        </member>
        <member name="M:CYBD.Utilities.PageCacheHelper.TryGet``1(System.String,``0@)">
            <summary>
            尝试获取页面缓存数据
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>是否获取成功</returns>
        </member>
        <member name="M:CYBD.Utilities.PageCacheHelper.Contains(System.String)">
            <summary>
            是否存在指定缓名的页面缓存
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.PageCacheHelper.Set(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:CYBD.Utilities.PageCacheHelper.Remove(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:CYBD.Utilities.PageCacheHelper.RemoveBySearch(System.String)">
            <summary>
            
            </summary>
            <param name="keyPrefix"></param>
        </member>
        <member name="T:CYBD.Utilities.PathHelper">
            <summary>
            对URL路径或其它路径的操作助手
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    对URL路径或其它路径的操作助手
                             
             History:        2009/12/12 13:38:20 创建
            </remarks>
        </member>
        <member name="M:CYBD.Utilities.PathHelper.PathCombile(System.String,System.String)">
            <summary>
            合并路径串
            </summary>
            <param name="path1"></param>
            <param name="path2"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.PathHelper.GetFileExtensionWithouDot(System.String)">
            <summary>
            获取文件扩展名，不包含"."
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.PathHelper.ResolveParamUrl(System.String,System.String,System.String,System.String)">
            <summary>
            新网址合并上旧网址的GET参数
            </summary>
            <param name="newUrlInput">新网址</param>
            <param name="orgUrlInput">现网址</param>
            <param name="newParamKey">新的参数名</param>
            <param name="newParamValue">新的参数值</param>
        </member>
        <member name="M:CYBD.Utilities.PathHelper.ResolveParamUrl(System.String,System.String,System.String)">
            <summary>
            给网址添加新参数,并保持原本的参数(单个新参数)
            </summary>
            <param name="urlInput">可能带参数的网址</param>
            <param name="newParamKey">新的参数名</param>
            <param name="newParamValue">新的参数值</param>
        </member>
        <member name="M:CYBD.Utilities.PathHelper.ResolveParamsUrl(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            给网址添加新参数,并保持原本的参数(多个新参数)
            </summary>
            <param name="urlInput">可能带参数的网址</param>
            <param name="dicNewParams">新的参数名值对集合</param>
        </member>
        <member name="M:CYBD.Utilities.PathHelper.RemoveUrlParam(System.String,System.String)">
            <summary>
            从指定网址中去除掉某个参数
            </summary>
            <param name="urlInput"></param>
            <param name="paramName"></param>
        </member>
        <member name="M:CYBD.Utilities.PathHelper.RemoveUrlParam(System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="urlInput"></param>
            <param name="paramNames"></param>
            <returns></returns>
        </member>
        <member name="T:CYBD.Utilities.SecurityHelper">
            <summary>
            安全助手
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    安全助手
                             
             History:        2010/4/3 13:52:08 创建
            </remarks>
        </member>
        <member name="F:CYBD.Utilities.SecurityHelper._KEY_64">
            <summary>
            
            </summary>
        </member>
        <member name="F:CYBD.Utilities.SecurityHelper._IV_64">
            <summary>
            
            </summary>
        </member>
        <member name="M:CYBD.Utilities.SecurityHelper.DESCryptoEncode(System.String)">
            <summary>
            加密算法
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:CYBD.Utilities.SecurityHelper.DESCryptoEncode(System.String,System.String,System.String)">
            <summary>
            加密算法
            </summary>
            <param name="key"></param>
            <param name="iv"></param>
            <param name="data"></param>
        </member>
        <member name="M:CYBD.Utilities.SecurityHelper.DESCryptoDecode(System.String)">
            <summary>
            解密算法
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:CYBD.Utilities.SecurityHelper.DESCryptoDecode(System.String,System.String,System.String)">
            <summary>
            解密算法
            </summary>
            <param name="key"></param>
            <param name="iv"></param>
            <param name="data"></param>
        </member>
        <member name="M:CYBD.Utilities.SecurityHelper.MD5(System.String)">
            <summary>
            MD5加密
            </summary>
            <param name="text">要加密的字符串</param>
        </member>
        <member name="M:CYBD.Utilities.SecurityHelper.SHA1(System.String)">
            <summary>
            SHA1加密
            </summary>
            <param name="text">要加密的字符串</param>
        </member>
        <member name="T:CYBD.Utilities.StringHelper">
            <summary>
            字符操作助手
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    字符操作助手
                             
             History:        2009/11/17 18:58:10 创建
            </remarks>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.EqualsIgnoreCase(System.String,System.String)">
            <summary>
            忽略大小写的字符串比较
            </summary>
            <param name="s1">字符串1</param>
            <param name="s2">字符串2</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.StartsWith(System.String,System.Char)">
            <summary>
            是否以指定字符开头
            </summary>
            <param name="text">搜索的文本</param>
            <param name="lookfor">指定字符</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.StartsWith(System.String,System.String)">
            <summary>
            是否以指定字符串开头
            </summary>
            <param name="target">搜索的文本</param>
            <param name="lookfor">指定字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.StartsWithIgnoreCase(System.String,System.String)">
            <summary>
            是否以指定字符串开头(忽略大小写)
            </summary>
            <param name="text">搜索的文本</param>
            <param name="lookfor">指定字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.EndsWith(System.String,System.Char)">
            <summary>
            是否以指定字符结尾
            </summary>
            <param name="text">搜索的文本</param>
            <param name="lookfor">指定字符</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.EndsWith(System.String,System.String)">
            <summary>
            是否以指定字符串结尾
            </summary>
            <param name="text">搜索的文本</param>
            <param name="lookfor">指定字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.EndsWithIgnoreCase(System.String,System.String)">
            <summary>
            是否以指定字符串结尾(忽略大小写)
            </summary>
            <param name="text">搜索的文本</param>
            <param name="lookfor">指定字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.TryParse(System.String,System.Type,System.Object@)">
            <summary>
            尝试解析字符串,支持可为空的值类型,枚举类型,Guid
            </summary>
            <param name="input">字符串</param>
            <param name="type">所要解析成的类型</param>
            <param name="result">解析结果，解析失败将返回null</param>
            <returns>是否解析成功</returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.TryParse(System.String,System.Type,System.Object)">
            <summary>
            尝试解析字符串,如果解析失败,使用传递进来的默认值,支持可为空的值类型,枚举类型,Guid
            </summary>
            <param name="input">字符串</param>
            <param name="type">所要解析成的类型</param>
            <param name="defaultValue">如果解析失败要使用的默认值</param>
            <returns>解析成的对象结果</returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.TryParse``1(System.String,``0)">
            <summary>
            尝试解析字符串,如果解析失败,使用传递进来的默认值,支持可为空的值类型,枚举类型,Guid
            </summary>
            <typeparam name="T">支持可为空的值类型,枚举类型,Guid</typeparam>
            <param name="input">字符串</param>
            <param name="defaultValue">如果解析失败要使用的默认值</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.TryParse``1(System.String)">
            <summary>
            尝试解析字符串,如果解析失败,使用类型的默认值,支持可为空的值类型,枚举类型,Guid
            </summary>
            <typeparam name="T">支持可为空的值类型,枚举类型,Guid</typeparam>
            <param name="input">字符串</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.Split``1(System.String)">
            <summary>
            分割字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.Split``1(System.String,System.Char[])">
            <summary>
            分割字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="input"></param>
            <param name="seperators"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.Split``1(System.String,System.StringSplitOptions,System.Char[])">
            <summary>
            分割字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="input"></param>
            <param name="stringSplitOptions"></param>
            <param name="seperators"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.Split``1(System.String,System.String[])">
            <summary>
            分割字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="input"></param>
            <param name="seperators"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.Split``1(System.String,System.StringSplitOptions,System.String[])">
            <summary>
            分割字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="input"></param>
            <param name="stringSplitOptions"></param>
            <param name="seperators"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.Explode``1(System.String)">
            <summary>
            分割字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.Explode``1(System.String,System.Char[])">
            <summary>
            分割字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="input"></param>
            <param name="seperators"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.Explode``1(System.String,System.StringSplitOptions,System.Char[])">
            <summary>
            分割字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="input"></param>
            <param name="seperators"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.Explode``1(System.String,System.String[])">
            <summary>
            分割字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="input"></param>
            <param name="seperators"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.Explode``1(System.String,System.StringSplitOptions,System.String[])">
            <summary>
            分割字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="input"></param>
            <param name="stringSplitOptions"></param>
            <param name="seperators"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.Join``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            将指定列表所有项以指定的分隔符连接成字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.Join``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            将指定列表所有项以指定的分隔符连接成字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="joinSign"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.Join``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Boolean)">
            <summary>
            将指定列表所有项以指定的分隔符连接成字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="joinSign"></param>
            <param name="singleQuotes"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.CheckIsNumberFormat(System.String)">
            <summary>
            检查是否纯数字
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.CheckIsEmailFormat(System.String)">
            <summary>
            检查是否邮箱地址格式
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.CheckIsSuperLinkFormat(System.String)">
            <summary>
            检查是否超链接地址格式
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.GetByteLength(System.String)">
            <summary>
            获取字符串的字节长度，默认自动尝试用GB2312编码获取，
            如果当前运行环境支持GB2312编码，英文字母将被按1字节计算，中文字符将被按2字节计算
            如果尝试使用GB2312编码失败，将采用当前系统的默认编码，此时得到的字节长度根据具体运行环境默认编码而定
            </summary>
            <param name="text">字符串</param>
            <returns>字符串的字节长度</returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.GetByteLength(System.Text.Encoding,System.String)">
            <summary>
            获取字符串的字节长度，默认自动尝试用GB2312编码获取，
            如果当前运行环境支持GB2312编码，英文字母将被按1字节计算，中文字符将被按2字节计算
            如果尝试使用GB2312编码失败，将采用当前系统的默认编码，此时得到的字节长度根据具体运行环境默认编码而定
            </summary>
            <param name="encoding"></param>
            <param name="text">字符串</param>
            <returns>字符串的字节长度</returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.CutString(System.String,System.Int32,System.String)">
            <summary>
            按最大长度裁剪字符串
            </summary>
            <param name="text"></param>
            <param name="maxLen">最大长度(字数)</param>
            <param name="sign">补足符号</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.XCutString(System.String,System.Int32,System.String)">
            <summary>
            按最大长度裁剪字符串[加强版](两个字母相当于一个汉字)
            </summary>
            <param name="text"></param>
            <param name="maxLen">最大长度(字节)</param>
            <param name="sign">补足符号</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.TagKeywords(System.String,System.String,System.String,System.String)">
            <summary>
            加亮字符串中指定的关键词，不区分大小写
            </summary>
            <param name="text"></param>
            <param name="keywords">要加亮的关键词</param>
            <param name="tag">使用的html标签名</param>
            <param name="css">使用的css样式名</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.FormatSize(System.Int64)">
            <summary>
            文件大小友好格式字符串
            </summary>
            <param name="byteSize"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.BuildRangeNumberString(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.BuildRangeNumberString(System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.BuildRangeNumberString(System.Int32,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="min"></param>
            <param name="max"></param>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.FormatSqlDateTime(System.DateTime)">
            <summary>
            
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.FilterUnsafeSql(System.String)">
            <summary>
            过滤不安全的sql
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.CreateLinkQueryString(System.Collections.Specialized.NameValueCollection)">
            <summary>
            创建连接串
            </summary>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.CreateLinkQueryString(System.Collections.Specialized.NameValueCollection,System.Text.Encoding)">
            <summary>
            创建连接串
            </summary>
            <param name="collection"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.RemoveHTML(System.String)">
            <summary>
            去除HTML
            </summary>
            <param name="htmlstring"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.StringHelper.FillText``1(``0,System.Int32,System.String)">
            <summary>
            补全不够长度的数字字符串，如将110填充为0000110
            </summary>
            <typeparam name="T"></typeparam>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="T:CYBD.Utilities.WebHelper">
            <summary>
            WEB助手
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    WEB助手
                             
             History:        2010/10/12 11:18:20 创建
            </remarks>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.UrlEncode(System.String)">
            <summary>
            对URL字符串进行编码
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.UrlEncode(System.String,System.Text.Encoding)">
            <summary>
            对URL字符串进行编码
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.UrlDecode(System.String)">
            <summary>
            对URL字符串进行解码
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.UrlDecode(System.String,System.Text.Encoding)">
            <summary>
            对URL字符串进行解码
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.HtmlEncode(System.String)">
            <summary>
            HTML编码
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.HtmlDecode(System.String)">
            <summary>
            HTML解码
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.RemoveCookie(System.String)">
            <summary>
            移除Cookie
            </summary>
            <param name="cookieKey">键名</param>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.RemoveCookie(System.String,System.String)">
            <summary>
            移除Cookie
            </summary>
            <param name="cookieKey">键名</param>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.SetCookie(System.String,System.String)">
            <summary>
            修改Cookie的值 如果不存在键则创建 (不设置过期时间)
            </summary>
            <param name="cookieKey"></param>
            <param name="cookieValue"></param>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.SetCookie(System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            修改Cookie的值 如果不存在键则创建
            </summary>
            <param name="cookieKey"></param>
            <param name="cookieValue"></param>
            <param name="expires">过期时间</param>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.SetCookie(System.String,System.String,System.String)">
            <summary>
            修改Cookie的值 如果不存在键则创建
            </summary>
            <param name="cookieKey"></param>
            <param name="cookieValue"></param>
            <param name="domain">关联的主域</param>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.SetCookie(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            修改Cookie的值 如果不存在键则创建
            </summary>
            <param name="cookieKey"></param>
            <param name="cookieValue"></param>
            <param name="expires">过期时间</param>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.GetCookie(System.String)">
            <summary>
            获取Cookie
            </summary>
            <param name="cookieKey"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.SetCookieItem(System.String,System.String,System.String)">
            <summary>
            设置Cookie (不设置过期时间)
            </summary>
            <param name="cookieKey"></param>
            <param name="itemKey">子项</param>
            <param name="cookieValue">子项的值</param>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.SetCookieItem(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            设置Cookie
            </summary>
            <param name="cookieKey">键值</param>
            <param name="itemKey">子项</param>
            <param name="cookieValue">子项的值</param>
            <param name="expires">过期时间</param>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.CatchPageContent(System.String)">
            <summary>
            模拟浏览器抓取指定url地址页面内容
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.CatchPageContent(System.String,System.Text.Encoding)">
            <summary>
            模拟浏览器抓取指定url地址页面内容
            </summary>
            <param name="url"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.CatchPageContent(System.String,System.Text.Encoding,System.String)">
            <summary>
            模拟浏览器抓取指定url地址页面内容
            </summary>
            <param name="url"></param>
            <param name="encoding"></param>
            <param name="referer"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.CatchPageContent(System.String,System.String,System.String,System.String,System.Text.Encoding)">
            <summary>
            模拟浏览器抓取指定url地址页面内容
            </summary>
            <param name="url"></param>
            <param name="userAgent"></param>
            <param name="contentType"></param>
            <param name="referer"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.CatchDefaultPageContent(System.String)">
            <summary>
            抓取指定url地址页面内容
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.DownloadRemoteFileBinary(System.String)">
            <summary>
            下载指定地址的二进制数据
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.DownloadRemoteFileBinary(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            下载指定地址的二进制数据
            </summary>
            <param name="url"></param>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.DownloadRemoteFileBinary(System.String,System.String)">
            <summary>
            下载指定地址的二进制数据
            </summary>
            <param name="url"></param>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.DownloadRemoteFileBinary(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            下载指定地址的二进制数据
            </summary>
            <param name="url"></param>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.DownloadRemoteFileBinary(System.String,System.String,System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            下载指定地址的二进制数据
            </summary>
            <param name="url"></param>
            <param name="userAgent"></param>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.UploadFileToRemote(System.String,System.IO.Stream,System.Collections.Specialized.NameValueCollection)">
            <summary>
            上传文件至指定
            </summary>
            <param name="url"></param>
            <param name="fileStream"></param>
            <param name="postData"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.UploadFileToRemote(System.String,System.IO.Stream,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            上传文件至指定
            </summary>
            <param name="url"></param>
            <param name="fileStream"></param>
            <param name="postData"></param>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.WebHelper.UploadFileToRemote(System.String,System.IO.Stream,System.Collections.Specialized.NameValueCollection,System.String,System.String)">
            <summary>
            上传文件至指定
            </summary>
            <param name="url"></param>
            <param name="fileStream"></param>
            <param name="postData"></param>
            <param name="userAgent"></param>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="T:CYBD.Utilities.XConvert">
            <summary>
            转换助手
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    转换助手
                             
             History:        2011/07/25 11:25:20 创建
            </remarks>
        </member>
        <member name="M:CYBD.Utilities.XConvert.ToString(System.Object)">
            <summary>
            转换为字符串，防止空值
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.XConvert.ToString(System.Object,System.String)">
            <summary>
            转换为字符串，防止空值
            </summary>
            <param name="input"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.XConvert.ToInt32(System.String)">
            <summary>
            转换为32位整型
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.XConvert.ToInt32(System.String,System.Int32)">
            <summary>
            转换为32位整型
            </summary>
            <param name="input"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.XConvert.ToInt64(System.String)">
            <summary>
            转换为64位整型
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.XConvert.ToInt64(System.String,System.Int64)">
            <summary>
            转换为64位整型
            </summary>
            <param name="input"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.XConvert.ToInt16(System.String)">
            <summary>
            转换为16位整型
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.XConvert.ToInt16(System.String,System.Int16)">
            <summary>
            转换为16位整型
            </summary>
            <param name="input"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.XConvert.ToByte(System.String)">
            <summary>
            转换为8位整型
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.XConvert.ToByte(System.String,System.Byte)">
            <summary>
            转换为8位整型
            </summary>
            <param name="input"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.XConvert.ToDecimal(System.String)">
            <summary>
            转换为十进制数字
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.XConvert.ToDecimal(System.String,System.Decimal)">
            <summary>
            转换为十进制数字
            </summary>
            <param name="input"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.XConvert.ToDouble(System.String)">
            <summary>
            转换为双精度浮点数
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.XConvert.ToDouble(System.String,System.Double)">
            <summary>
            转换为双精度浮点数
            </summary>
            <param name="input"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.XConvert.ToFloat(System.String)">
            <summary>
            转换为单精度浮点数
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.XConvert.ToFloat(System.String,System.Single)">
            <summary>
            转换为单精度浮点数
            </summary>
            <param name="input"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.XConvert.ToDateTime(System.String)">
            <summary>
            转换为时间
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.XConvert.ToDateTime(System.String,System.DateTime)">
            <summary>
            转换为时间
            </summary>
            <param name="input"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.XConvert.NullableToString``1(System.Nullable{``0})">
            <summary>
            将可为空的值转为字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="nullable"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.XConvert.ShowDate(System.Nullable{System.DateTime})">
            <summary>
            转换成常规的日期字符串，对可为空的值作了防空值处理
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.XConvert.ShowDate(System.DateTime)">
            <summary>
            转换成常规的日期字符串
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.XConvert.ShowDateTime(System.Nullable{System.DateTime})">
            <summary>
            转换成常规的时间字符串，对可为空的值作了防空值处理
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.XConvert.ShowDateTime(System.DateTime)">
            <summary>
            转换成常规的时间字符串
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.XConvert.ToJavaScriptString(System.String)">
            <summary>
            转到JS用的string
            </summary>
            <param name="text">文本</param>
            <returns></returns>
        </member>
        <member name="M:CYBD.Utilities.XConvert.EncodeJavaScriptString(System.String)">
            <summary>
            Encodes a string to be represented as a string literal. The format
            is essentially a JSON string.
            
            The string returned includes outer quotes 
            Example Output: "Hello \"Rick\"!\r\nRock on"
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="T:CYBD.Utilities.XmlHelper">
            <summary>
            XML操作助手
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    XML操作助手
                             
             History:        2011/10/12 11:18:20 创建
            </remarks>
        </member>
        <member name="M:CYBD.Utilities.XmlHelper.SerializeClass``1(``0)">
            <summary>
            转换一个类实例为XML字符串
            </summary>
            <param name="instance">要序列化的类的实例</param>
        </member>
        <member name="M:CYBD.Utilities.XmlHelper.SerializeClass``1(``0,System.Text.Encoding)">
            <summary>
            转换一个类实例为XML字符串
            </summary>
            <param name="instance">要序列化的类的实例</param>
            <param name="encoding">指定编码</param>
        </member>
        <member name="M:CYBD.Utilities.XmlHelper.SerializeClass(System.Object)">
            <summary>
            转换一个类实例为XML字符串
            </summary>
            <param name="instance">要序列化的类的实例</param>
        </member>
        <member name="M:CYBD.Utilities.XmlHelper.SerializeClass(System.Object,System.Text.Encoding)">
            <summary>
            转换一个类实例为XML字符串
            </summary>
            <param name="instance">要序列化的类的实例</param>
        </member>
        <member name="M:CYBD.Utilities.XmlHelper.SerializeClass(System.Object,System.Type,System.Text.Encoding)">
            <summary>
            转换一个类实例为XML字符串
            </summary>
            <param name="instance">要序列化的类的实例</param>
            <param name="encoding">指定编码</param>
        </member>
        <member name="M:CYBD.Utilities.XmlHelper.SerializeClass``1(``0,System.String)">
            <summary>
            转换一个类实例为XML文件
            </summary>
            <param name="instance">要序列化的类的实例</param>
            <param name="xmlFilePath">要保存的XML文件的物理地址</param>
        </member>
        <member name="M:CYBD.Utilities.XmlHelper.SerializeClass(System.Object,System.String)">
            <summary>
            转换一个类实例为XML文件
            </summary>
            <param name="instance">要序列化的类的实例</param>
            <param name="xmlFilePath">要保存的XML文件的物理地址</param>
        </member>
        <member name="M:CYBD.Utilities.XmlHelper.SerializeClass(System.Object,System.Type,System.String)">
            <summary>
            转换一个类实例为XML文件
            </summary>
            <param name="instance">要序列化的类的实例</param>
            <param name="xmlFilePath">要保存的XML文件的物理地址</param>
        </member>
        <member name="M:CYBD.Utilities.XmlHelper.DeSerializeClass``1(System.String)">
            <summary>
            反序列化XML字符串为一个类
            </summary>
            <param name="xml">XML字符串</param>
        </member>
        <member name="M:CYBD.Utilities.XmlHelper.DeSerializeClass``1(System.String,System.Text.Encoding)">
            <summary>
            反序列化XML字符串为一个类
            </summary>
            <param name="xml">XML字符串</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:CYBD.Utilities.XmlHelper.DeSerializeClass(System.String,System.Type,System.Text.Encoding)">
            <summary>
            反序列化XML字符串为一个类
            </summary>
            <param name="xml">XML字符串</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:CYBD.Utilities.XmlHelper.DeSerializeClass``1(``0@,System.String)">
            <summary>
            反序列化XML文件为一个类
            </summary>
            <param name="instance">传递类的实例</param>
            <param name="xmlFilePath">保存的XML文件的物理地址</param>
        </member>
        <member name="M:CYBD.Utilities.XmlHelper.GetSingleNodeConfig``1(System.String,System.String)">
            <summary>
            获取单节点配置
            </summary>
            <param name="xmlPath"></param>
            <param name="xpath"></param>
            <returns></returns>
        </member>
        <member name="T:CYBD.ValidateCode.ValidateCode001">
            <summary>
            验证码类型1
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    验证码类型1
                             
             History:        2015/4/28 17:23:17 创建
                             
            </remarks>
        </member>
        <member name="T:CYBD.ValidateCode.ValidateCodeBase">
            <summary>
            验证码基类
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    验证码基类，所有验证码类型均继承此类
                             
             History:        2015/4/28 17:20:13 创建
                             
            </remarks>
        </member>
        <member name="M:CYBD.ValidateCode.ValidateCodeBase.CreateImage(System.String@)">
            <summary>
            生成图片
            </summary>
            <param name="resultCode">用户必须填的字符串</param>
            <returns></returns>
        </member>
        <member name="P:CYBD.ValidateCode.ValidateCodeBase.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:CYBD.ValidateCode.ValidateCodeBase.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:CYBD.ValidateCode.ValidateCodeBase.Tip">
            <summary>
            填写验证码提示 ：如"请输入计算结果"
            </summary>
        </member>
        <member name="P:CYBD.ValidateCode.ValidateCodeBase.DisableIme">
            <summary>
            是否开启输入法
            </summary>
        </member>
        <member name="T:CYBD.ValidateCode.ValidateCode002">
            <summary>
            验证码类型2
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    验证码类型2
                             
             History:        2015/4/28 17:38:45 创建
                             
            </remarks>
        </member>
        <member name="T:CYBD.ValidateCode.ValidateCode003">
            <summary>
            验证码类型3
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    验证码类型3
                             
             History:        2015/4/28 19:16:04 创建
                             
            </remarks>
        </member>
        <member name="M:CYBD.ValidateCode.ValidateCode003.TwistImage(System.Drawing.Bitmap,System.Boolean,System.Double,System.Double)">
            <summary>
            正弦曲线Wave扭曲图片
            </summary>
            <param name="srcBmp">图片路径</param>
            <param name="bXDir">如果扭曲则选择为True</param>
            <param name="nMultValue">波形的幅度倍数，越大扭曲的程度越高，一般为3</param>
            <param name="dPhase">波形的起始相位，取值区间[0-2*PI)</param>
            <returns></returns>
        </member>
        <member name="T:CYBD.ValidateCode.ValidateCodeManager">
            <summary>
            验证码管理器
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    验证码管理器，用于创建各种验证码
                             
             History:        2015/4/28 17:18:23 创建
                             
            </remarks>
        </member>
        <member name="M:CYBD.ValidateCode.ValidateCodeManager.CreateValidateCode``1">
            <summary>
            创建一个验证码实例
            </summary>
            <returns></returns>
        </member>
        <member name="T:CYBD.ValidateCode.ValidateCode004">
            <summary>
            验证码类型4
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    验证码类型4
                             
             History:        2015/4/28 19:16:04 创建
                             
            </remarks>
        </member>
        <member name="T:CYBD.ValidateCode.ValidateCode005">
            <summary>
            验证码类型5
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    验证码类型5
                             
             History:        2015/4/28 19:16:04 创建
                             
            </remarks>
        </member>
        <member name="M:CYBD.ValidateCode.ValidateCode005.TwistImage(System.Drawing.Bitmap,System.Boolean,System.Double,System.Double)">
            <summary>
            正弦曲线Wave扭曲图片
            </summary>
            <param name="srcBmp">图片路径</param>
            <param name="bXDir">如果扭曲则选择为True</param>
            <param name="nMultValue">波形的幅度倍数，越大扭曲的程度越高，一般为3</param>
            <param name="dPhase">波形的起始相位，取值区间[0-2*PI)</param>
            <returns></returns>
        </member>
        <member name="T:CYBD.ValidateCode.ValidateCode006">
            <summary>
            验证码类型6
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    验证码类型6
                             
             History:        2015/4/28 19:16:04 创建
                             
            </remarks>
        </member>
        <member name="M:CYBD.ValidateCode.ValidateCode006.TwistImage(System.Drawing.Bitmap,System.Boolean,System.Double,System.Double)">
            <summary>
            正弦曲线Wave扭曲图片
            </summary>
            <param name="srcBmp">图片路径</param>
            <param name="bXDir">如果扭曲则选择为True</param>
            <param name="nMultValue">波形的幅度倍数，越大扭曲的程度越高，一般为3</param>
            <param name="dPhase">波形的起始相位，取值区间[0-2*PI)</param>
            <returns></returns>
        </member>
        <member name="T:CYBD.ValidateCode.ValidateCode007">
            <summary>
            验证码类型7
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    验证码类型7
                             
             History:        2015/4/28 19:16:04 创建
                             
            </remarks>
        </member>
        <member name="T:CYBD.ValidateCode.ValidateCode008">
            <summary>
            验证码类型8
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    验证码类型8
                             
             History:        2015/4/28 19:16:04 创建
                             
            </remarks>
        </member>
        <member name="T:CYBD.ValidateCode.ValidateCode009">
            <summary>
            验证码类型9
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    验证码类型9
                             
             History:        2015/4/28 19:16:04 创建
                             
            </remarks>
        </member>
        <member name="T:CYBD.ValidateCode.ValidateCode010">
            <summary>
            验证码类型10
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    验证码类型10
                             
             History:        2015/4/28 19:16:04 创建
                             
            </remarks>
        </member>
        <member name="T:CYBD.ValidateCode.ValidateCode011">
            <summary>
            验证码类型11
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    验证码类型11
                             
             History:        2015/4/28 19:16:04 创建
                             
            </remarks>
        </member>
        <member name="T:CYBD.ValidateCode.ValidateCode012">
            <summary>
            验证码类型12
            </summary>
            <remarks>
             Author:         周少阳(Michael Zhou)
             Description:    验证码类型12
                             
             History:        2015/4/28 19:16:04 创建
                             
            </remarks>
        </member>
    </members>
</doc>
